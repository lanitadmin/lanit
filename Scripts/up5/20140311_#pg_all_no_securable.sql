!!!1) Запустить jboss - Необходимо для создания полей owner в таблицах
!!!2) Остановить jboss
!!!3) Прогнать скрипт
!!!4) Запустить jboss
update ACTIVITY_REPORT_REF a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update ARCHIVE_CARD a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update ARCHIVE_CARD_SIGNED_PERSON a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update ARCHIVE_COLLECTION a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update ARM_STATISTICS a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update ASSIGNED_ROLE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_BOOKED_TIME a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_BOOKED_TIME_HEAD a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_CALENDAR_PROFILE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update charge a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update CONSULT_QUERY a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update debt a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update DEPARTMENT a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update DOC_TO_DOC_TEMPLATE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_OPERATOR_RATIO a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_OPERATOR_STATISTIC a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_SETTINGS a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_SOUND a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_STATISTIC a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_TEMPLATE_NOTIFICATION a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_QUEUE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EVENT_MESSAGE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_WINDOW a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update FORK_PROCESS a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update FORK_PROCESS_SETUP a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update FORK_PROCESS_VARIABLE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_APPEAL a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_APPLICATION a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_DOC_PACKAGE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_IN_OUT_DOCUMENT_JOURNL a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_OGV_AREA a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_OGV_DOC a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_OGV_TEMPLATE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_PACK_RATING a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_REGISTRATOR_JOURNAL a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_REQUEST a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_SERVICE_ATTR a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_SERVICE_DOC a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_SERVICE_DOC_CODE_INTEG a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_SERVICE_DOC_TREE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_SERVICE_TEMPLATE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update gossrvc_service_visibility a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update GOSSRVC_TRANS_PACK_RATING a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update CONS_INQUIRER a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update METHOD_EVENT a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update NODE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update OBJECT_GROUP a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update OBJECT_GROUP_ITEM a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update OGV_TO_DOC_TEMPLATE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update PRINT_DOC a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update PRINT_DOC_TYPE_TEMPLATE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update CONS_QUESTION a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update QUEUE_ITEM a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update REMOTE_SERVICE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update REMOTE_SYSTEM a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update REQUEST a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update REQUEST_CALL_BACK a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update REQUEST_TEMPLATE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update ROLE_REF a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_SCHEDULE_PROFILE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_SERVICE_GROUP a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update SERVICE_INTEGRATION a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_SERVICE_TREE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update SOAP_CONTEXT a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update SOAP_CONTEXT_HIST a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update SOAP_OPTIONS a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update SETTING_TABLE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update TYPE_APPLICATION_TREE a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update USER_REF a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;
update EQ_USER_GROUP a SET owner=(select s.owner from securable s where s.id=a.id) where a.owner is null;

create table securable_bak as select * from securable;
create table securable_aud_bak as select * from securable_aud;
drop table securable CASCADE;
drop table securable_aud cascade;
