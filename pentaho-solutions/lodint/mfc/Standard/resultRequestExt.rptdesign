<?xml version="1.0" encoding="UTF-8"?>
<report xmlns="http://www.eclipse.org/birt/2005/design" version="3.2.22" id="1">
    <property name="createdBy">Eclipse BIRT Designer Version 3.7.0.v20110602 Build &lt;3.7.0.v20110607-1526></property>
    <property name="units">cm</property>
    <property name="iconFile">/templates/blank_report.gif</property>
    <property name="bidiLayoutOrientation">ltr</property>
    <property name="imageDPI">96</property>
    <parameters>
        <scalar-parameter name="soapContextId" id="10">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">integer</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
        <scalar-parameter name="user" id="1316">
            <property name="hidden">true</property>
            <property name="valueType">static</property>
            <property name="dataType">string</property>
            <property name="distinct">true</property>
            <list-property name="selectionList"/>
            <property name="paramType">simple</property>
            <property name="controlType">text-box</property>
            <structure name="format">
                <property name="category">Unformatted</property>
            </structure>
        </scalar-parameter>
    </parameters>
    <data-sources>
        <script-data-source name="Data Source" id="7"/>
    </data-sources>
    <data-sets>
        <script-data-set name="inParametrs" id="8">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">parName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">parValue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">groupName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">groupPosition</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">position</property>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">parName</property>
                </structure>
                <structure>
                    <property name="columnName">parValue</property>
                </structure>
                <structure>
                    <property name="columnName">groupName</property>
                </structure>
                <structure>
                    <property name="columnName">groupPosition</property>
                </structure>
                <structure>
                    <property name="columnName">position</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">parName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">parValue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">groupPosition</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">position</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[clazz = new Packages.org.cp.birt.plugins.Shark();

contextId= params["soapContextId"];

context= null;
contextT = clazz.getEntityManagerLod().createQuery
(
" select context "+
" from "+
	" SoapContext context "+
" where "+
	" context.id = :contextId  "
).setParameter("contextId", new Packages.java.lang.Long(contextId.toString()))
.getResultList();

if (contextT.size() > 0) {
	context = contextT.get(0);
}

result = clazz.getEntityManagerLod().createQuery
(
" select par.attr.code, "+
" par.attr.name, "+
" par.attr.groupAttr, "+
" par.attr.orderAttr,  "+
" par.attr.dictVar," +
" par.attr.dictVarSeparator1, "+
" par.attr.dictVarSeparator2 "+
" from "+
	" SoapContextVar par "+
" where "+
	" par.parent.id = :contextId  "+
	" and par.attr.modeParam = 'in' "+
	" and (par.attr.printing = true or par.attr.printing is null) "
).setParameter("contextId",new Packages.java.lang.Long(contextId.toString()))
.getResultList();



totalrows = result.size();

currentrow = 0;]]></method>
            <method name="fetch"><![CDATA[if (currentrow >= totalrows) {
	return(false);
}

var rowValue = result.get(currentrow);

row["parName"] = rowValue[1];
row["position"] = rowValue[3]
row["groupName"] = null;
row["groupPosition"] = null;

// Работа с группой по отбражению
if (rowValue[2] != null ) {
	var group = rowValue[2].split(",");

	if (group.length > 0 ){
		row["groupName"] = group[0];
	};

	if (group.length > 1 ){
		row["groupPosition"] = parseInt(group[1]);
	};
}
// -------- 

//Получение значения --
var tempResul = context.getVarValue(rowValue[0]);
row["parValue"] = tempResul;

if (rowValue[4] != null ){ //перменая - динамический справочник

	var listParString = context.getVarValue(rowValue[4]);
	var listPar =  listParString.split(rowValue[6]);
	for (i=0; i<listPar.length; i++){
		var parString = listPar[i];
		var parS =  parString.split(rowValue[5]);
		if (parS.length >0 &amp;&amp; parS[0]==tempResul) {
			row["parValue"] = parS[1];
		}
	}
}
//---------

currentrow = currentrow + 1;

return(true);
]]></method>
        </script-data-set>
        <script-data-set name="mainDataSet" id="1315">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">dateRequest</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">nameRequest</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">controlerRequest</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">cryptoControlerReq</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">dateResponse</property>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="position">6</property>
                    <property name="name">resultResponse</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">7</property>
                    <property name="name">controlerResponse</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">8</property>
                    <property name="name">cryptoControlerRes</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">9</property>
                    <property name="name">currControler</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">10</property>
                    <property name="name">zayav_fio</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">11</property>
                    <property name="name">service</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">12</property>
                    <property name="name">pack_num</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">13</property>
                    <property name="name">pack_date</property>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="position">14</property>
                    <property name="name">ogv_name</property>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">dateRequest</property>
                </structure>
                <structure>
                    <property name="columnName">nameRequest</property>
                </structure>
                <structure>
                    <property name="columnName">controlerRequest</property>
                </structure>
                <structure>
                    <property name="columnName">cryptoControlerReq</property>
                </structure>
                <structure>
                    <property name="columnName">dateResponse</property>
                </structure>
                <structure>
                    <property name="columnName">resultResponse</property>
                </structure>
                <structure>
                    <property name="columnName">controlerResponse</property>
                </structure>
                <structure>
                    <property name="columnName">cryptoControlerRes</property>
                </structure>
                <structure>
                    <property name="columnName">currControler</property>
                </structure>
                <structure>
                    <property name="columnName">zayav_fio</property>
                </structure>
                <structure>
                    <property name="columnName">service</property>
                </structure>
                <structure>
                    <property name="columnName">pack_num</property>
                </structure>
                <structure>
                    <property name="columnName">pack_date</property>
                </structure>
                <structure>
                    <property name="columnName">ogv_name</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">dateRequest</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">nameRequest</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">controlerRequest</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">cryptoControlerReq</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">dateResponse</property>
                        <property name="dataType">date-time</property>
                    </structure>
                    <structure>
                        <property name="position">6</property>
                        <property name="name">resultResponse</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">7</property>
                        <property name="name">controlerResponse</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">8</property>
                        <property name="name">cryptoControlerRes</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">9</property>
                        <property name="name">currControler</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">10</property>
                        <property name="name">zayav_fio</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">11</property>
                        <property name="name">service</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">12</property>
                        <property name="name">pack_num</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">13</property>
                        <property name="name">pack_date</property>
                        <property name="dataType">date</property>
                    </structure>
                    <structure>
                        <property name="position">14</property>
                        <property name="name">ogv_name</property>
                        <property name="dataType">string</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[clazz = new Packages.org.cp.birt.plugins.Shark();

contextId= params["soapContextId"];
userLogin =params["user"];

contextHome = Packages.org.jboss.seam.Component.getInstance("reportHome",false);
context = contextHome.getMapEntity().get(contextId.toString());

listSoapHistory = context.getHistoryContext();

//Поиск сертификата исходящего сообщения
historySertReq = null;
for (i=0; i<listSoapHistory.size(); i++) {
	var hist =  listSoapHistory.get(i);
	var cert = Packages.org.cp.soap.ExtFunc.getCertificateFromSoap(Packages.org.cp.soap.ExtFunc.getSoap(hist.getUidRequest()));
	if (cert != null) {
		historySertReq=cert;
		break;		
	}
}

//Извлечение сертификата ответа
historySertResp = Packages.org.cp.soap.ExtFunc.getCertificateFromSoap(Packages.org.cp.soap.ExtFunc.getSoap(listSoapHistory.get(listSoapHistory.size()-1).getUidResponse()));

//Получение информации  о запросе
requestT = clazz.getEntityManagerLod().createQuery
(
" select req.transferDate, "+
" 	req.resultDate, "+
"	u.lastName || ' ' || u.firstName || ' ' || u.middleName "+
" from "+
	" Request req, User u "+
" where "+
	" req.soapContext.id = :contextId  "+
	" and u.id = :login "
).setParameter("contextId", new Packages.java.lang.Long(contextId.toString()))
.setParameter ("login", new Packages.java.lang.Long(userLogin))
.getResultList();

requestT = clazz.getEntityManagerLod().createQuery
(
" select req "+
" from "+
	" Request req "+
" where "+
	" req.soapContext.id = :contextId  "
).setParameter("contextId", new Packages.java.lang.Long(contextId.toString()))
.getResultList();

user = clazz.getEntityManagerLod().createQuery
(
" select "+
"	u.lastName "+
" from "+
	" User u "+
" where "+
	" and u.id = :login "
).setParameter ("login", new Packages.java.lang.Long(userLogin))
.getResultList();


totalrows = 1;

currentrow = 0;
]]></method>
            <method name="fetch"><![CDATA[if (currentrow >= totalrows) {
	return(false);
}

if (historySertReq != null &amp;&amp; historySertReq.getSubjectDN() != null ){
	row["cryptoControlerReq"] =historySertReq.getSubjectDN().toString(); 
}

if (historySertResp != null &amp;&amp; historySertResp.getSubjectDN()){
	row["cryptoControlerRes"] =historySertResp.getSubjectDN().toString(); 
}

if (context != null  ) {
	if ( context.getParent() != null)
		row["nameRequest"] = context.getParent().getName();
	if (context.getRunUser() != null) 
	 	row["controlerRequest"] = context.getRunUser().getLastName()+ " "+context.getRunUser().getFirstName()+" "+context.getRunUser().getMiddleName(); 
}

if (requestT.size()>0) {
	request = requestT.get(0);
	row["dateRequest"] = request.getTransferDate();
	docPac =  request.getDocPackage();
	if (docPac != null) {
		service = docPac.getService();
		if (service != null) {
			row["service"] = service.getName(); 
		}
		row["pack_num"] = docPac.getPackNum();
		row["pack_date"] = docPac.getPackDate();
		applGroup = docPac.getApplicantGroup();
		if (applGroup != null){
			row["zayav_fio"] = applGroup.getName();
		}
	}
	printD = request.getPrintDoc();
	if (printD != null) {
		gsrvReq = printD.getGossrvcRequest();
		if (gsrvReq != null) {
			ogvId = gsrvReq.getOgvId();
			if (ogvId != null &amp;&amp; !ogvId.isEmpty()){
				cdao = Packages.org.jboss.seam.Component.getInstance("cardElementDAO", true);
				ceOgv = cdao.getCardElementById(ogvId);
				if (ceOgv != null) {
					row["ogv_name"] = ceOgv.getName();
				}
			} 
		}
	}
}


var rowValue = requestT.get(currentrow);
row["dateRequest"] = rowValue[0];
//row["dateResponse"] = rowValue[1];
row["dateResponse"] = new Date();
row["currControler"] = rowValue[2];

currentrow++;
return (true);]]></method>
        </script-data-set>
        <script-data-set name="outParametrs" id="1328">
            <list-property name="resultSetHints">
                <structure>
                    <property name="position">1</property>
                    <property name="name">parName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">2</property>
                    <property name="name">parValue</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">3</property>
                    <property name="name">groupName</property>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="position">4</property>
                    <property name="name">groupPosition</property>
                    <property name="dataType">integer</property>
                </structure>
                <structure>
                    <property name="position">5</property>
                    <property name="name">position</property>
                    <property name="dataType">integer</property>
                </structure>
            </list-property>
            <list-property name="columnHints">
                <structure>
                    <property name="columnName">parName</property>
                </structure>
                <structure>
                    <property name="columnName">parValue</property>
                </structure>
                <structure>
                    <property name="columnName">groupName</property>
                </structure>
                <structure>
                    <property name="columnName">groupPosition</property>
                </structure>
                <structure>
                    <property name="columnName">position</property>
                </structure>
            </list-property>
            <structure name="cachedMetaData">
                <list-property name="resultSet">
                    <structure>
                        <property name="position">1</property>
                        <property name="name">parName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">2</property>
                        <property name="name">parValue</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">3</property>
                        <property name="name">groupName</property>
                        <property name="dataType">string</property>
                    </structure>
                    <structure>
                        <property name="position">4</property>
                        <property name="name">groupPosition</property>
                        <property name="dataType">integer</property>
                    </structure>
                    <structure>
                        <property name="position">5</property>
                        <property name="name">position</property>
                        <property name="dataType">integer</property>
                    </structure>
                </list-property>
            </structure>
            <property name="dataSource">Data Source</property>
            <method name="open"><![CDATA[clazz = new Packages.org.cp.birt.plugins.Shark();

contextId= params["soapContextId"];


contextHome = Packages.org.jboss.seam.Component.getInstance("reportHome",false);
context = contextHome.getMapEntity().get(contextId.toString());

listSoapHistory = context.getHistoryContext();

result = clazz.getEntityManagerLod().createQuery
(
" select par.attr.code, "+
" par.attr.name, "+
" par.attr.groupAttr, "+
" par.attr.orderAttr,  "+
" par.attr.dictVar," +
" par.attr.dictVarSeparator1, "+
" par.attr.dictVarSeparator2 "+
" from "+
	" SoapContextVar par "+
" where "+
	" par.parent.id = :contextId  "+
	" and par.attr.modeParam = 'out' "+
	" and (par.attr.printing = true or par.attr.printing is null) "
).setParameter("contextId",new Packages.java.lang.Long(contextId.toString()))
.getResultList();



totalrows = result.size();

currentrow = 0;]]></method>
            <method name="fetch"><![CDATA[if (currentrow >= totalrows) {
	return(false);
}

var rowValue = result.get(currentrow);

row["parName"] = rowValue[1];
row["position"] = rowValue[3]
row["groupName"] = null;
row["groupPosition"] = null;

// Работа с группой по отбражению
if (rowValue[2] != null ) {
	var group = rowValue[2].split(",");

	if (group.length > 0 ){
		row["groupName"] = group[0];
	};

	if (group.length > 1 ){
		row["groupPosition"] = parseInt(group[1]);
	};
}
// -------- 

//Получение значения --
var tempResul = context.getVarValue(rowValue[0]);
row["parValue"] = tempResul;

if (rowValue[4] != null ){ //перменая - динамический справочник

	var listParString = context.getVarValue(rowValue[4]);
	var listPar =  listParString.split(rowValue[6]);
	for (i=0; i<listPar.length; i++){
		var parString = listPar[i];
		var parS =  parString.split(rowValue[5]);
		if (parS.length >0 &amp;&amp; parS[0]==tempResul) {
			row["parValue"] = parS[1];
		}
	}
}
//---------

currentrow = currentrow + 1;

return(true);
]]></method>
        </script-data-set>
    </data-sets>
    <styles>
        <style name="report" id="4">
            <property name="fontFamily">sans-serif</property>
            <property name="fontSize">10pt</property>
        </style>
        <style name="crosstab-cell" id="5">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
        <style name="crosstab" id="6">
            <property name="borderBottomColor">#CCCCCC</property>
            <property name="borderBottomStyle">solid</property>
            <property name="borderBottomWidth">1pt</property>
            <property name="borderLeftColor">#CCCCCC</property>
            <property name="borderLeftStyle">solid</property>
            <property name="borderLeftWidth">1pt</property>
            <property name="borderRightColor">#CCCCCC</property>
            <property name="borderRightStyle">solid</property>
            <property name="borderRightWidth">1pt</property>
            <property name="borderTopColor">#CCCCCC</property>
            <property name="borderTopStyle">solid</property>
            <property name="borderTopWidth">1pt</property>
        </style>
    </styles>
    <page-setup>
        <simple-master-page name="Simple MasterPage" id="2">
            <property name="type">a4</property>
            <property name="orientation">portrait</property>
            <property name="leftMargin">2.0108333333333333cm</property>
            <property name="rightMargin">1.031875cm</property>
            <property name="headerHeight">0in</property>
            <property name="footerHeight">0in</property>
        </simple-master-page>
    </page-setup>
    <body>
        <grid id="11">
            <property name="fontFamily">"Linux Libertine"</property>
            <property name="height">7.822916666666667in</property>
            <property name="width">17.806458333333335cm</property>
            <property name="dataSet">mainDataSet</property>
            <list-property name="boundDataColumns">
                <structure>
                    <property name="name">dateRequest</property>
                    <text-property name="displayName">dateRequest</text-property>
                    <expression name="expression" type="javascript">dataSetRow["dateRequest"]</expression>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="name">nameRequest</property>
                    <text-property name="displayName">nameRequest</text-property>
                    <expression name="expression" type="javascript">dataSetRow["nameRequest"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">controlerRequest</property>
                    <text-property name="displayName">controlerRequest</text-property>
                    <expression name="expression" type="javascript">dataSetRow["controlerRequest"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">cryptoControlerReq</property>
                    <text-property name="displayName">cryptoControlerReq</text-property>
                    <expression name="expression" type="javascript">dataSetRow["cryptoControlerReq"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">dateResponse</property>
                    <text-property name="displayName">dateResponse</text-property>
                    <expression name="expression" type="javascript">dataSetRow["dateResponse"]</expression>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="name">resultResponse</property>
                    <text-property name="displayName">resultResponse</text-property>
                    <expression name="expression" type="javascript">dataSetRow["resultResponse"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">controlerResponse</property>
                    <text-property name="displayName">controlerResponse</text-property>
                    <expression name="expression" type="javascript">dataSetRow["controlerResponse"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">cryptoControlerRes</property>
                    <text-property name="displayName">cryptoControlerRes</text-property>
                    <expression name="expression" type="javascript">dataSetRow["cryptoControlerRes"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">currControler</property>
                    <text-property name="displayName">currControler</text-property>
                    <expression name="expression" type="javascript">dataSetRow["currControler"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Column Binding</property>
                    <expression name="expression" type="javascript">dataSetRow["cryptoControlerReq"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_1</property>
                    <expression name="expression" type="javascript">dataSetRow["cryptoControlerRes"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_2</property>
                    <expression name="expression" type="javascript">dataSetRow["dateRequest"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_3</property>
                    <expression name="expression" type="javascript">dataSetRow["nameRequest"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_4</property>
                    <expression name="expression" type="javascript">dataSetRow["controlerRequest"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_5</property>
                    <expression name="expression" type="javascript">dataSetRow["dateResponse"]</expression>
                    <property name="dataType">date-time</property>
                </structure>
                <structure>
                    <property name="name">Column Binding_6</property>
                    <expression name="expression" type="javascript">dataSetRow["currControler"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">zayav_fio</property>
                    <text-property name="displayName">zayav_fio</text-property>
                    <expression name="expression" type="javascript">dataSetRow["zayav_fio"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">service</property>
                    <text-property name="displayName">service</text-property>
                    <expression name="expression" type="javascript">dataSetRow["service"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">pack_num</property>
                    <text-property name="displayName">pack_num</text-property>
                    <expression name="expression" type="javascript">dataSetRow["pack_num"]</expression>
                    <property name="dataType">string</property>
                </structure>
                <structure>
                    <property name="name">pack_date</property>
                    <text-property name="displayName">pack_date</text-property>
                    <expression name="expression" type="javascript">dataSetRow["pack_date"]</expression>
                    <property name="dataType">date</property>
                </structure>
                <structure>
                    <property name="name">ogv_name</property>
                    <text-property name="displayName">ogv_name</text-property>
                    <expression name="expression" type="javascript">dataSetRow["ogv_name"]</expression>
                    <property name="dataType">string</property>
                </structure>
            </list-property>
            <column id="12">
                <property name="width">2.4270833333333335in</property>
            </column>
            <column id="13">
                <property name="width">11.641666666666666cm</property>
            </column>
            <row id="17">
                <cell id="18">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <label id="56">
                        <property name="fontSize">16pt</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">Межведомственный запрос</text-property>
                    </label>
                </cell>
            </row>
            <row id="1351">
                <cell id="1352">
                    <property name="fontSize">12pt</property>
                    <label id="1361">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Заявитель</text-property>
                    </label>
                </cell>
                <cell id="1353">
                    <data id="1364">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">zayav_fio</property>
                    </data>
                </cell>
            </row>
            <row id="1354">
                <cell id="1355">
                    <label id="1362">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Наименование услуги</text-property>
                    </label>
                </cell>
                <cell id="1356">
                    <data id="1365">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">service</property>
                    </data>
                </cell>
            </row>
            <row id="1357">
                <cell id="1358">
                    <label id="1363">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Комплект документов</text-property>
                    </label>
                </cell>
                <cell id="1359">
                    <grid id="1366">
                        <property name="width">8.493125000000001cm</property>
                        <column id="1367">
                            <property name="width">0.714375cm</property>
                        </column>
                        <column id="1368">
                            <property name="width">2.9897916666666666cm</property>
                        </column>
                        <column id="1369">
                            <property name="width">0.873125cm</property>
                        </column>
                        <column id="1370">
                            <property name="width">3.9158333333333335cm</property>
                        </column>
                        <row id="1371">
                            <cell id="1372">
                                <label id="1376">
                                    <property name="fontSize">12pt</property>
                                    <text-property name="text">№</text-property>
                                </label>
                            </cell>
                            <cell id="1373">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <data id="1377">
                                    <property name="fontSize">12pt</property>
                                    <property name="resultSetColumn">pack_num</property>
                                </data>
                            </cell>
                            <cell id="1374">
                                <label id="1378">
                                    <property name="fontSize">12pt</property>
                                    <text-property name="text">от</text-property>
                                </label>
                            </cell>
                            <cell id="1375">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <data id="1379">
                                    <structure name="dateTimeFormat">
                                        <property name="category">Long Date</property>
                                        <property name="pattern">Long Date</property>
                                    </structure>
                                    <property name="resultSetColumn">pack_date</property>
                                </data>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
            <row id="20">
                <cell id="21">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <label id="57">
                        <property name="fontSize">14pt</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">Состав запроса</text-property>
                    </label>
                </cell>
            </row>
            <row id="23">
                <cell id="24">
                    <label id="58">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Дата, время отправления</text-property>
                    </label>
                </cell>
                <cell id="25">
                    <data id="1319">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">Column Binding_2</property>
                    </data>
                </cell>
            </row>
            <row id="85">
                <cell id="86">
                    <label id="88">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Наименование запроса</text-property>
                    </label>
                </cell>
                <cell id="87">
                    <data id="1320">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">Column Binding_3</property>
                    </data>
                </cell>
            </row>
            <row id="1380">
                <cell id="1381">
                    <label id="1383">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Орган государственной власти</text-property>
                    </label>
                </cell>
                <cell id="1382">
                    <data id="1388">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">ogv_name</property>
                    </data>
                </cell>
            </row>
            <row id="1384">
                <cell id="1385">
                    <label id="1387">
                        <property name="fontSize">8pt</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">(поставщик сведений)</text-property>
                    </label>
                </cell>
                <cell id="1386"/>
            </row>
            <row id="26">
                <cell id="27">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <table id="59">
                        <property name="width">17.674166666666665cm</property>
                        <property name="dataSet">inParametrs</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">parName</property>
                                <text-property name="displayName">parName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["parName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">parValue</property>
                                <text-property name="displayName">parValue</text-property>
                                <expression name="expression" type="javascript">dataSetRow["parValue"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">groupName</property>
                                <text-property name="displayName">groupName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["groupName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">groupPosition</property>
                                <text-property name="displayName">groupPosition</text-property>
                                <expression name="expression" type="javascript">dataSetRow["groupPosition"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">position</property>
                                <text-property name="displayName">position</text-property>
                                <expression name="expression" type="javascript">dataSetRow["position"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">Column Binding</property>
                                <expression name="expression" type="javascript">dataSetRow["parName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">Column Binding_1</property>
                                <expression name="expression" type="javascript">dataSetRow["parValue"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <list-property name="sort">
                            <structure>
                                <expression name="key" type="javascript">row["groupPosition"]</expression>
                                <property name="direction">asc</property>
                                <property name="strength">-1</property>
                            </structure>
                        </list-property>
                        <column id="69">
                            <property name="width">2.3958333333333335in</property>
                        </column>
                        <column id="70">
                            <property name="width">11.588750000000001cm</property>
                        </column>
                        <group id="71">
                            <property name="groupName">groupView</property>
                            <expression name="keyExpr" type="javascript">row["groupName"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">row["groupName"]</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <list-property name="sort">
                                <structure>
                                    <expression name="key" type="javascript">row["groupPosition"]</expression>
                                    <property name="direction">asc</property>
                                    <property name="strength">-1</property>
                                </structure>
                            </list-property>
                            <header>
                                <row id="72">
                                    <cell id="73">
                                        <data id="78">
                                            <property name="fontSize">12pt</property>
                                            <property name="fontStyle">italic</property>
                                            <property name="textUnderline">underline</property>
                                            <property name="resultSetColumn">groupName</property>
                                        </data>
                                    </cell>
                                    <cell id="74"/>
                                </row>
                            </header>
                        </group>
                        <detail>
                            <row id="63">
                                <list-property name="visibility">
                                    <structure>
                                        <property name="format">all</property>
                                        <expression name="valueExpr" type="javascript">row["parValue"]==null</expression>
                                    </structure>
                                </list-property>
                                <cell id="64">
                                    <data id="79">
                                        <property name="paddingLeft">20pt</property>
                                        <property name="textAlign">left</property>
                                        <property name="resultSetColumn">Column Binding</property>
                                    </data>
                                </cell>
                                <cell id="65">
                                    <data id="80">
                                        <property name="resultSetColumn">Column Binding_1</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                    </table>
                </cell>
            </row>
            <row id="29">
                <cell id="30">
                    <label id="81">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Запрос сформирован</text-property>
                    </label>
                </cell>
                <cell id="31">
                    <data id="1321">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">Column Binding_4</property>
                    </data>
                </cell>
            </row>
            <row id="32">
                <property name="borderBottomColor">#000000</property>
                <property name="borderBottomStyle">solid</property>
                <property name="borderBottomWidth">thin</property>
                <cell id="33">
                    <label id="82">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">ЭП контролёра (МФЦ)</text-property>
                    </label>
                </cell>
                <cell id="34">
                    <data id="1317">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">Column Binding</property>
                    </data>
                </cell>
            </row>
            <row id="35">
                <property name="height">0.3229166666666667in</property>
                <cell id="36"/>
                <cell id="37"/>
            </row>
            <row id="38">
                <cell id="39">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <label id="83">
                        <property name="fontSize">14pt</property>
                        <property name="textAlign">center</property>
                        <text-property name="text">Состав ответа</text-property>
                    </label>
                </cell>
            </row>
            <row id="41">
                <cell id="42">
                    <label id="84">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Дата, время ответа</text-property>
                    </label>
                </cell>
                <cell id="43">
                    <data id="1322">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">Column Binding_5</property>
                    </data>
                </cell>
            </row>
            <row id="44">
                <cell id="45">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <label id="89">
                        <property name="fontSize">12pt</property>
                        <property name="fontWeight">bold</property>
                        <text-property name="text">Результат межведомственного запроса: </text-property>
                    </label>
                </cell>
            </row>
            <row id="47">
                <cell id="48">
                    <label id="90">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Текст полученного ответа</text-property>
                    </label>
                </cell>
                <cell id="49"/>
            </row>
            <row id="1325">
                <cell id="1326">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <table id="1329">
                        <property name="width">17.62125cm</property>
                        <property name="dataSet">outParametrs</property>
                        <list-property name="boundDataColumns">
                            <structure>
                                <property name="name">parName</property>
                                <text-property name="displayName">parName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["parName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">parValue</property>
                                <text-property name="displayName">parValue</text-property>
                                <expression name="expression" type="javascript">dataSetRow["parValue"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">groupName</property>
                                <text-property name="displayName">groupName</text-property>
                                <expression name="expression" type="javascript">dataSetRow["groupName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">groupPosition</property>
                                <text-property name="displayName">groupPosition</text-property>
                                <expression name="expression" type="javascript">dataSetRow["groupPosition"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">position</property>
                                <text-property name="displayName">position</text-property>
                                <expression name="expression" type="javascript">dataSetRow["position"]</expression>
                                <property name="dataType">integer</property>
                            </structure>
                            <structure>
                                <property name="name">Column Binding</property>
                                <expression name="expression" type="javascript">dataSetRow["parName"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                            <structure>
                                <property name="name">Column Binding_1</property>
                                <expression name="expression" type="javascript">dataSetRow["parValue"]</expression>
                                <property name="dataType">string</property>
                            </structure>
                        </list-property>
                        <column id="1339">
                            <property name="width">2.3854166666666665in</property>
                        </column>
                        <column id="1340">
                            <property name="width">11.562291666666667cm</property>
                        </column>
                        <group id="1341">
                            <property name="groupName">groupVar</property>
                            <expression name="keyExpr" type="javascript">row["groupName"]</expression>
                            <structure name="toc">
                                <expression name="expressionValue" type="javascript">row["groupName"]</expression>
                            </structure>
                            <property name="hideDetail">false</property>
                            <list-property name="sort">
                                <structure>
                                    <expression name="key" type="javascript">row["position"]</expression>
                                    <property name="direction">asc</property>
                                    <property name="strength">-1</property>
                                </structure>
                            </list-property>
                            <header>
                                <row id="1342">
                                    <cell id="1343">
                                        <data id="1348">
                                            <property name="fontSize">12pt</property>
                                            <property name="fontStyle">italic</property>
                                            <property name="textUnderline">underline</property>
                                            <property name="resultSetColumn">groupName</property>
                                        </data>
                                    </cell>
                                    <cell id="1344"/>
                                </row>
                            </header>
                        </group>
                        <detail>
                            <row id="1333">
                                <cell id="1334">
                                    <data id="1349">
                                        <property name="paddingLeft">20pt</property>
                                        <property name="textAlign">left</property>
                                        <property name="resultSetColumn">Column Binding</property>
                                    </data>
                                </cell>
                                <cell id="1335">
                                    <data id="1350">
                                        <property name="resultSetColumn">Column Binding_1</property>
                                    </data>
                                </cell>
                            </row>
                        </detail>
                    </table>
                </cell>
            </row>
            <row id="50">
                <cell id="51">
                    <label id="91">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">Ответ сформирован</text-property>
                    </label>
                </cell>
                <cell id="52"/>
            </row>
            <row id="53">
                <cell id="54">
                    <label id="95">
                        <property name="fontSize">12pt</property>
                        <text-property name="text">ЭП специалиста (ОГВ)</text-property>
                    </label>
                </cell>
                <cell id="55">
                    <data id="1318">
                        <property name="fontSize">12pt</property>
                        <property name="resultSetColumn">Column Binding_1</property>
                    </data>
                </cell>
            </row>
            <row id="92">
                <cell id="93">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <text id="99">
                        <property name="fontSize">12pt</property>
                        <property name="contentType">html</property>
                        <text-property name="content"><![CDATA[Получен <VALUE-OF>row["dateResponse"]</VALUE-OF> по Системе межведомственного электронного взаимодействия, в том числе с использованием регионального сегмента.
]]></text-property>
                    </text>
                </cell>
            </row>
            <row id="96">
                <cell id="97">
                    <property name="colSpan">2</property>
                    <property name="rowSpan">1</property>
                    <grid id="103">
                        <property name="height">0.5625in</property>
                        <property name="width">17.674166666666665cm</property>
                        <column id="104">
                            <property name="width">1.5416666666666667in</property>
                        </column>
                        <column id="105">
                            <property name="width">0.9479166666666666in</property>
                        </column>
                        <column id="106">
                            <property name="width">1.2395833333333333in</property>
                        </column>
                        <column id="107">
                            <property name="width">0.8229166666666666in</property>
                        </column>
                        <column id="108">
                            <property name="width">6.111875cm</property>
                        </column>
                        <row id="109">
                            <property name="height">0.3229166666666667in</property>
                            <cell id="110">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                            </cell>
                            <cell id="111"/>
                            <cell id="112">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                            </cell>
                            <cell id="113"/>
                            <cell id="114">
                                <property name="borderBottomColor">#000000</property>
                                <property name="borderBottomStyle">solid</property>
                                <property name="borderBottomWidth">thin</property>
                                <data id="1324">
                                    <property name="fontSize">12pt</property>
                                    <property name="textAlign">center</property>
                                    <property name="resultSetColumn">Column Binding_6</property>
                                </data>
                            </cell>
                        </row>
                        <row id="115">
                            <cell id="116">
                                <label id="121">
                                    <property name="fontSize">8pt</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">должность</text-property>
                                </label>
                            </cell>
                            <cell id="117"/>
                            <cell id="118">
                                <label id="122">
                                    <property name="fontSize">8pt</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Подпись</text-property>
                                </label>
                            </cell>
                            <cell id="119"/>
                            <cell id="120">
                                <label id="123">
                                    <property name="fontSize">8pt</property>
                                    <property name="textAlign">center</property>
                                    <text-property name="text">Расшифровка ФИО</text-property>
                                </label>
                            </cell>
                        </row>
                    </grid>
                </cell>
            </row>
        </grid>
    </body>
    <list-property name="images">
        <structure>
            <property name="name">logo.jpg</property>
            <property name="data">
                /9j/4AAQSkZJRgABAQAAAQABAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
                JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
                MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wgARCADkBJgDASIAAhEBAxEB/8QA
                GwABAAIDAQEAAAAAAAAAAAAAAAQFAQIDBgf/xAAZAQEBAQEBAQAAAAAAAAAAAAAAAQMCBAX/2gAMAwEA
                AhADEAAAAffgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHnJx6GkpZOPHPXFdzlZb+f0Z+hUEkt5tXO61
                9J38d0709a5ddNQUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABGk8zytnPjGvCbHOHeVyIzuNZ8CWR4
                snkWNdNiidy6lXt13NOM7kR+m/YgO+TaLL5nbPHqRtbeiOm/UdoMvgaZk6HGDa4Om/GSZlgAAAAAAA4a
                eP4z3k8vPefGxrDvyJXK440rfSROnHspOve77y8WlRe/FL9D5M19B6LzMm+n2KmudtwvQAAFHxtdiFpK
                1ONba9DEOZzGnTBwl6dyJr13NsdxX57YOsSRwG0aeYj2MQ4pAi5kDvGmwyP137EPHfYj9e/Mi7dsnXnJ
                4kJZVJK5y4h12x2IOJOpvawJ4AAAAABHqLOGcLSLqZ4SNjMa0ryPM6amIVpAOsawjHDPbQ5985MxpAsI
                EjkceMuOdo/bqceMzB0jTOJGj8Z5z26dyPjvHO1bfVxiNaRztBkhvjoWAAAAAAHPp47nON06eb8uQa+A
                by+m4cofj+rM3k2V7pIt3T65er+eXcHvGCNPCtqlOvSeh8y69vt2m+3pAAAAAea9LDKSTO5HHbp1IMG1
                hErXtsaaddTht2ycu2NTn3zzOXTpxIdxHllfjp0OekyvLGvs4hHkwp5w174GeuCFN5bEfSVg46yBZ76b
                gAAAAAAAAAAAAAHKFMrjrmsnkSVXdSy47wibpy4kzMcSukHobW1DYnPaBoTJ1RZksAAAAAAAAAAAFd5r
                fn5MqXlOXxQU45g9JWVsK8y9KxrnUznDrixrha9YZ7wrliK71tHYzaZ6jxXs9vTsO9QAAAAEOZAOW3DY
                76cOZI2qZhL59ohM4oxJl1ex2squcRJNdPI/eJk6I2SViNkk9oepIkQuJL6wuBY9ovcxmN0NtokwngAA
                AAAAAGEywMtRs1wbtBu0xXRzHRyJ1csHZxHZxwd3Ad0cSEckhGVJRsEpFEpEEtEJLQxMQ8E1CE1CxU5B
                E5AJPQMFgrxYK/BYq4WPODWyVXPtE+b3nawpbJSoa+W3zxtM/TBVvHTC5U3oJ1xT/NO7bNJt157lIkc+
                qAqpPeM1b0U1tbCp5d8+1VufT3Yq4WKuyWCvFggCegFnoInIOSahImoYmIYmIhZaJklIolIwkowko6JC
                Ple7gO7iOziOzkOrlk6OZejRG7QbtRs1yZYGQoDGSa43HPHVZxx3EdIJGxKVExMJCxOVAxYErsWQrMWi
                yqxbCpxbkp8XKqXF2SjxeqocX5PP49CPO49Gs83j0pPNY9MPMY9Qs8tj1Q8pj1izyWPXDyGPYE8dj2Sv
                GPZk8U9qPE49us8PA+j+Qy5j0F7RfM29NtWX/n+h4tI7+z5FxtWWnn+x5WdB9pr8yBimlz1XUHp5mPQe
                f974vrGwtKq0beTGvy/ongPfeBz+nactJ2nn1z7h9LjxGfbDxWfaJfGZ9kPHZ9gXyGfXI8k9aXyefVo8
                rn1JfL59OXzOfSo83n0ZfO59CPP5v0tDm9FFm8S0q6FNm4LUZtkVWbQtZmyFdmwSwMzhCzMSxEssXMkR
                890vHPUc87l1zlAKxka67k546I5Y6k447DhjuSPiQI2JJIiUIeJghYmpIOJwgYnivxYErsWIrcWRKzW0
                FXraoqcWxKjFuKfFwSmxcilxdEpMXYo8XgosXqShxfCgxfk8/j0A89j0I87C9dSTjWkvqHzd2knlWza8
                h+i8pn6Nryju+s/K+18VZaeThLsuHO/XzPrINt54238/1Lm0q7OdeUG3y/oXgveeDy+nL6bdu/Pxz6HO
                rz2fQZXz+b/JQZvslDm9ytFm8yUe11m2k2uclNm4yU+bfK1GbbJU5tS1ebQVmbMtbmyzVbtYZK/M8sHM
                7JBzNLDzMyQ8yyxcylRsyRHzILxz2ycc9cryz0GmdxrnZbjORkKAAQdSwV3YloQmoAno2hMQMFghdCSr
                +hMcNSSiciwQOxJQ+hIQOxJcNSShbEtXyjsi8ycgCei6E1D6ncAAAAAAACivY848fFkVnz+bzz3TPeVn
                QzHXFpZ+XZ+nMWTnbxRfSU2Jr6XyfbM0i7SXfjvJfl2fvnZgO8fbefqZ/Pok7bWGnHoB6NgAAAAAAACD
                gnq7sS0ITUHUsEbQmIGCwQtyUgbkxw1JKJxLFA7ElD3JKB2JLhqSULJMV8o7IvMnIAnouhNQ+p3AAAMF
                PyueZUyJ+Suxb6lYsdiBrN3I8exFV1sY5F42mxUbWuxXx7XBpBndSqkWGhSWEnYj85WxSS7DmVFnNFNx
                vxSTZwrot2KaXOAAAAAAAAAHh+1vR+DngqMdea5Uyy5zSi6UqrrNIS7Ugu80arxRi8zRC94VPpZpz9f5
                X2G+oaaAAAAAAAAUmt6PPyrYU+LkVWlwKzW14nCPP0IG87YgcLgU21voQo9nucoNnkqe8nYp7CZocedj
                wKaXP5lTZ9xV8rziVs6RoRolyKqV3ydgAAKyzFXmwyUfL0OCPynCinTxQZvclBj0Io7Cbg8/IuNSPGtM
                FF1tx56bZip53grYV7kgcLYV2lnk06gAAAAAAAAAAAAA8N7mHxn5Ckuo/jxrR6PCAAAAAAJEsmb3s+fo
                Wsk9WwKAAAAAAAAAAAAqbbU89OsxR9bfBBzOFRrcik534oOPpdiu1ssFBNs8HOnvtTz020ween2YruFw
                KCTbYIScKzpPyZAAArrHkR48/kR7CP3PNX2/QoV7yKqVL3KzWzEOuv8AYpc2wpJFnqVG1vgqVsKaRYbn
                Go9BwI2soRpGckdKhm23TqQuvQQuu3ciYl8jnIzkj7ddip2t+RJ3xkAAAAAAqfNe7q8c/I1dz182NC68
                t/EFgAABm540gXXKxnt5+pPVoF7AAAAAVdpGIe82OY4TxT2W0o89pdCosO/QqJE3Yp498KhbCp1uMFZz
                uMlTyuxWy++xWcrXUh5k5I/Tpk48pfA6R5mpGk69it67dyLiTg59dskCR26FPOl6kkAADTfict+I16sm
                MbanHO+SLntqaZ3yZ07ZK6dvzIc6FMOWkmISYNiOsCVDJ2IupL71kwrrTnHJaLudutfMNuG+5pw71pcd
                oM4AAAAAAAAAAAj+U9m5z8M9V5/yylh3eecKJfZSgX+aqLLPe9uPoLnXatsjboL0AAAAAAAAABrG6xzr
                ydzjtp0Mce+hpHk6nJ0HXToOcOywRcbYJUCZyNJEaWV1rzwRpsHYlaxtC0p5+xviNoS3DmWGumpjbvFN
                JVXKLIAAAjGFTsWilwW86HIOSrqz2Lz1gWLzuD0fGh1PTPMTC25cac9Q8xIL9Vwj0LzfcvXl7MtVRXnp
                3mOp6J5b0pyk+f8AQAAAAAAAAAAAAAAAACNJJVcrpOaiVNGMl7AAAAAAAAAAAAAAAAAA0rpNaT+UeKW2
                seeStNIBI68Y5Lk+b7l7rHilrF48iVIoB6HPnNi+288L/NXEL95jc9NrAjFnmJsWAAABDJilyXGnGoPQ
                60HQvYkPYsuVfLJPCkuCXyj5JmlKLzTWqLrFZwLvaB1JCv3JnOt2JWYloM0vI9FF5RS1VWpaSKm2AAAA
                AAAAAAAAAAAAAAAAAAAAAAAAAAAAAACq4F5rB5ljv5nsegUVsbb0NgSd4EIsZ8TgSutdUHocw8kiVRTS
                bvUTSTmt5lh0jUpeSYehJ6w64vVFbmetJ1LPWosCeAABgNQZrQssABmGEzIRwd9QZDfUOO4bRQl4DjuG
                2A6cw6YDhJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADXAMBBng2DTiHXcOYNeoNQ3yGI4d8hDmBmOD
                uGoHQNOISQAf/8QAMRAAAgIBBAIABAcAAgIDAQAAAgMBBAAREhMUBRUQIjRAICEjJDAzYDEyRVAlNUFw
                /9oACAEBAAEFAv8ACEUDDvKoXk+QuPzgvtz1Zznqc9TOdK4vOx5GvivMBOLct0f/AMG/4yz5UAzr2rk7
                aVXD8pOFdsFktYWazkGcYNuwGB5RsZ2KVrD8cQYnybUktgND/E2PpqxuhfsdFHbYufYzCrLSa1dqIo+x
                0yPJRoy4xQA7krBbI3eynbyloN4zpd6ca0lJ9l+gXkJioy4S2F5KIn2HyjfEnB5LcsfJbloty+v7H9I7
                UC91nhed+VmN8zmPJiYO8hwjFgigPJb1H5LbJeR2z7HUSuGizFuO2ixzM7Vf7FzgQtr3+QOBr0Ydda34
                prm+X1zRK6CYW2vI2m0XJD4JstRIWa90TQ/x51LoWh/i8qRBVhrazO7M4d8gKL073P1bYtEiWeS457v7
                g70rYfktkjaJjU35eAeSGYrWueYtFLx8kOh3mhXOzMAfkJGud8oOL3JnZZ20+R5Wj5HcsPIchL8lBzHk
                hga9iXT3dLKvIy0+9MYXkNgeyGMO/IDF6DeryUNkfJDpXs88jbKX+y/P2MxkXpMvYx2HXDQEXdzl+S5J
                jyWsqu8rf5WByLXWBdXohNWakHBVeNJVAnBorBfr16x49WeuXthG2qVASZZqR0ATg+OUKyqLmbCBsL9c
                vYVBZJbUBpTQVM9Be3qK1HxyhCPHrhaqQpz169g+PUDbK+xLAhi5qEFuKCwxnj1NMKfFIeOEBOiDDnx6
                5mKADLPHrbjKC2kisNcvsHvCuqIb5FzrQVxmZKfgCzZlJwpzyJaprWDmnRIju2rShTNZ0B8ankJXlmpt
                yjeiyP8ADZrDaW+uNhTKcMk6QMPr7jZSUw5pCQF45Ryfj1MIvHrMy8essCoK3r8cpUjQSOV6/XAKwg8a
                CRzgmvXGnor1oSHTKbkUVi3rj2x8eoZCiC1DRWJBQUEx49OiE8IR49cNDx6gmKa8mgsg6CpkagCQUFLJ
                fj1LwfHpHK6OuAL323VxfKKcmQVIWXqkaMpcqwqwtwePWGR45Q4mqKD/AJH/AE4TIeULyJAPLOi7ZtH2
                MzWuEcUK1siyfIkKguQy4y3xW48jPEy5K2D5LcuPIzKi8jIgfktq+6W9VvlBnkJWIGLBi2XbTdl+T5Ha
                gbm+x3y4ZuyOF5HaXY/YhcNq+/rTdcIlVbZTEXj2d2do39WXHEqoFqKuPszDE39K52tLKvJcuLuE0K1v
                nb/KZisJk/I2bVmFD+ClI9e6gmZVKHJQMhUH9nTqVTNpMAVz/wA/GncmuVyvxzTtRaT/ACvYdbyAMZ7R
                fkoZI+Q1jvTwF5DXKl9gVGX9lQ/IbcK7PF351DyUEXsPlXf5Dr2+dvfKJ7kdKPIayV+IoWbehsscdOfI
                7ZPyErWN0jybxwivY5p9jOT5GRwbu9039pz5KAFtpqUstGtZeS0ibM9f2Oot8nxY7yPCTfJcWBO4PsHL
                NpHR3OmoIIrV560UFxk0VTXcqHJ9cqcGouMVTWlrKwNMqkAg6oGceOVAevXsnxwEJ+PUYnQWzIoiJHQW
                yFVxUwqYk9VXrLRT1rz49M5018J0xKDpAxnXHqJpAhg12RQCiJL9cqc6gcZUgJdtBEx6RsKbVjayothR
                49YgHj1LYvx614FEAUimFdn8vkHzYe44po/AIyZdHQVRZTIRDi2xjQHe8rb8r+PJkWq01j/B4+1tk4Lx
                10Sgw/kOsDBmoM2QoKCRoLGOmvrlRXtp1ir1+guaJ0FnnQXnQGCDx6QnoL29BeD48AkqK5L1ytvRXrPj
                EkB+PWwjriyt68N00oNEVAHLNUorpQKc9evFU5YcVNhTRCWz49JCVWDqspg3I8eA4FBa1xRAZZ49bcZ4
                9bTZ49bcEdo/eMOFri4MhF1c11XAa3yN2VL9gvdNsYaHkFmJXRGfYLgPYK0m+uIi6ucXaFqfYL2Yu4LV
                xa3SPkFHim8v3N2x161MIUpjJaz8AFsOb47e4/O6/E2imv3bGd6xiPI6Dbs9g/wrn2FHxL/5zswFjvK1
                7obgtgxY3gKI8gshG8sh7oxh+QWsiuKFseQXOT5BcYqwLWexXChPcCvIKaTrIIaXkVCLbYKwvILES8go
                RK8sM769RvrIk2gcfeDWbIxU7y9StgNPuDDrFgawHbECZaFaYuhvi1Eu+/aHKmtSmsdRG6umnKn+Tqlx
                sqxxtqQxseM/R6J8U+OMg9dheO3R0CgU0zTnrplVZHXiuG3yCaxNn1gzFZRIT9x5A5s3rpZ035035035
                07GdOxnTsZ07GdKxnSsZ0rGdKxnSsZ0bOdGznRs50bOdGznRs50LOUkWUWLkTVvCUEP8p199wvHwRrQV
                PEVpARosiCqlXP10jjqxOJ3j+Zy6cqsR43SZ8brJeOkmjRmK6FGqujxvAVmrFmJrijJo7qZeN3KPx24D
                oGZx47TBokJKosSZUdTjxswuPH7ZnxcyptM2lb2kgqU42qxwSgTcFfZc/wAUw4WujG9qC32PZO09k7PZ
                Oz2Ts9k7PZuz2bs9m7PZuz2js9o7PaOz2js9q/Pavz2r89q/PbPz2z89s/Hz2/G+LbyU/wDA65rmuaxm
                6M3Rm6M3Rm+M3xm+M3xnIOcg5yDnIOcg5yjnKOco5yhnMGcwZzBnMGc4ZzhnOGc4Z2F52F52F52F52V5
                2V52V52V52lZ2lZ2lZ2lZ2lZ21Z21Z21Z21Z3E53E53E53E53U53U53U53U53kZ3kZ3kZfurKoH6XjVO
                QNcalcxtJ4XfCnXh5trVUrYSyL4VutYOyqtWUZQR5Gm6uqnYl1SohTSWRImtt9dWnLPTXPjJ3L8c+Kzu
                8jO8jO8jO6jO6nO6nO6nO4nO4nO4nO4nO4nO2rO2rO2rO2rO0rO0rO0rO0rOyvOyvOyvOyvOwvOwvOwv
                OwvOdec4ZzhnOGcwZzBnMGcwZzBnKOco5yjnKOcg5yDnIOcg5vjN8ZvjN8ZujN0ZujN0ZrGa5rmv2Wma
                Zpmk5pOaTmk5pOaTmk5pOaTmk5pOaTmk5tnNs5tnNs5tnNs5tnNpZtLNpZtLNpZtLNpZtLNpZsLNhZsL
                NhZsLNhZsLNhZsLNhZsLNhZsPNh5sPNh5YiYy38lTK7ONF1W9PwR+hnkfpsrVisE7r0Rp2mufeeaEpsq
                sTZ8ftHPGfVeU+l+Cf6G/wB/jC0tOHb5DYebDzYebDzYebCzYWbCzYWbCzYWbCzYWbCzYWbCzYWbSzaW
                bSzaWbSzaWbSzaWbSzbObZzbObZzbObZzSc0nNJzSc0nNJzSc0nNJzSc0nNJzSc0zTNP8X5j+7yM/CxO
                2uo4ap6+JtRXI9DebyXkPpcqhsrWi33PHfU+U+nxJ70WB2WPG/VeU+l+Cf6G/wB9D8rpfl5r/Ba5rOaz
                ms5rObpzdObpzdObizeWbyzeWbyzeWchZyHnIech5yHnKecp5ynnKzOVmcrM5mZzMzmZnMzOduc7c525
                ztznbnYbnYbnYdnYdnYdnZdnZdnZdnZdnZfnafnafnafnafnbfnbfnbsZ27GdyxncsZ3LGNabD8j/wA5
                d/6+PZl9WoT+3oUfytX/AKTK5bq9kdlrx31PlPp8rjtr2Dhlnxv1Xk/pfgn+hv8AfR+stzI+Q7ljO5Yz
                uWM7djO3Yzt2M7b87T87T87T87T87T87Ls7Ls7Ls7Ls7Ls7Ds7Ds7Dc7Dc525ztznbnO3OduczM5mZzM
                zmZnMzOVmcrM5TzlPOU85DzkPOQ85DzkLN5ZvLN5ZvLN5ZuLN05unN05unNZzWc1nNZzXNfx6Zpmmbc2
                5tzZGbIzZGccZxxnHGcUZxRnDGcI5wjnAOcA5wDnXHOuOdcc6w51gzqhnVDOqGdQM6gZ1AzphnTDOmvO
                kvOkvOivOivOivOgvOgvOgvPXqz16s9erPXKz1ys9crPWqz1qs9YrPWJz1ic9WnPVpz1ac9UnPVJz1Sc
                8hTCtF386+eQ/wC6j42zEGFxnLZpfV3/AKPKtrglq1XIqVmpsX1G5KaULm15GJGI0jxv1Pk/pfgn+hv9
                /jo1tyqLHlvUpz1Sc9UnPVJz1ac9WnPWJz1ic9YrPWqz1qs9arPXKz1ys9crPXqz16s6C86C86C86K86
                K86K86S86S86S86YZ0wzqBnUDOoGdUM6oZ1QzrBnWHOsOdcc645wDnAOcA5wjnCOcMZxRnFGcUZxxnHG
                bIzZGbIzbGbc25pmmaf4Dywbqc/qeNr1tZsph+GHGa7cLpR+UVa/Gx0A5Lkyn41Eko7I8ymL2MwY3FTr
                8BWgGwn1856+cAgED8fvZ4sfz8X+rd/wMWMG1uwrWzCdtJtjjI37YmxMZFiZwXRNeLGuDYkhizhWIFDH
                bDZa2AdgQLk1ZzR2Jf8AOVrRTbBLg3CDOwO6GxLIthoDtxJZzKc3hhj5UuX6WBs71MZC8h48cWYIZtDo
                ywQZLpF0WRkgsCcqbyfZPXy16M6jNdkz1WZ1m513Z1nZ1W51W51W51nZ1nZ1W51G51XZ1X51X51HZ025
                02503Z03ZtmpQGOt4rxC9tf7KLPyjZ3SdvZBO2sZY4yOxtGbExkWZmIdHXh+DYkhizrk2IhDHQBMs8Yl
                YEShm5nNHYl/zlb0U2wS8Jwi7sDuh0SzthtBu4ks5lObwwx8rCX/ALkLPIljIXnOPF2YmJtDoywQZLph
                0WRmV2BZKm8v8ArLeCi0Yo9hr/WesiTtaNUxKRASgYSTPGfPyomdDTJViWz19pPORmzaxByPXKC4XhY4
                iW4RNVc4k8al/NCD045J51WPSAkVmoMjWuDJg0HyrZI3Ky2oF4SRDXbnWIq3G6I45iDGWPiuexKTjK8T
                E/ZWB6nkntKuXsCz2BZ7A89ieexPPYnnsTz2J57E89keeyPPZHnsjz2bM9mzPZsz2bM9ozPaMyWH5B/k
                C3tUuFK+yFZaiotWKPjNf7h6yJUi2KbBKcAS4pSTfG/PzJn5TTM1yWzoWk8xGbNGIORiuUFwvXY4pU8R
                NVc4k8lD4swg9vHJtZWY9QCRWqgyNW4MmLAfKtkjdrLagXhMnFdu3rEaJU7TjnDGWPiscrSk9a0TH45m
                BiGAUxYVOC9RFzL2xMFEMAh5VwojEMN6l5LAGeQd3IO/eO8LSGSLlmPIG1bAaJEIRyht5l52E7ZYEYJQ
                ccgbxco2Q0JxbltzlCVkwBXNhIh955Ovy11T2asxpP2VMIr1/Gql9n7wmgMk0AnsKjOZeQwZOTGC3jvg
                xKYauYF6jDkDbyBt3jCzspVnOrdyDv5l8ucy9eUN/YTOC0CkWgUkUDBWFAEtCMJ6gLeO+DGShypYDVt/
                Hd12P+a1R0mqhPNnzdJWmVf+v/gj/K+Eh0H/ANhwXHG7iXv78TEubB6bYN9eT42/lff+b6pyJTP/AMWr
                8r6v7iWyGQaWWK3yyklser/63aJ1ikmUlTMq+8sLmhctqgx+xqV+dlpk2HITCE/eVJgFV4IZs/VEngYH
                1Tv7/wDyBQU4MjzHxGv54NcT255OiXzVrP8AwUFxx8tl0FKS2z4c+SLLDE7NiJKbXzwwfzUUJQYaCw0G
                ln1ofXq/TarXt/jgRHIiIyBiM2DmkRm2IzaOmkaSIzmka6RrpGuaRpEREbR25MaxtHbtHTYOkiMxpGaR
                GQAxm0cgRjNo6bRyRiZ+9s1xspSZVm2q/HP86Uk83tGqnxtPhD72RGZ2xrtickYnNo5tic0jXSInaObR
                jNsaaRp8NsbtI1iIj4bR3bY12Dm2ImBGM2xkjE5tjNgzOka6RrAxEREDH4rZkIMCFB3PzOw0FxrIiZCp
                LuSO3E2ScVYGNNS4n9SSPpkWvjmzJ2WXIOsbS2chbYcYpVM7iOVCwyCxvLtqMjsIMnyLCYu0O9D7Bs8c
                6zwS25KsbblWcxkXZMcKw0cC0RHLmwUW5502JYx7JNsW9ZC5JRNwoQy3IFDiKYtTpWtc8tEzfM7bATBB
                /LdpxaBLpXNirIfzIrm8mNXSXQoyRfzJ/Xcx3VzsnOA1hOuQzVdmMe4V5VPmhVhrQN29czPdE57e6QbD
                eCexhmQ2IMptJMmWJmWeNaySwmnKoYW2HGKUlInV/wChFKbwsKLM3J0K5IxNvQ2OapZPZEzbOJFzGRNo
                4T25lZWNKimEtqrcsldyWZ3JgO18/Me8r+g2y18e4WCpJBy/iYsWgK9uHXWyeuMqMN4SkMANkcYyyK64
                jrhpChiOEYAkASjSJ4SxMJSElwhvFACUVwHOEJHgDTgDTgDTrr0lIzhhvg6yzgqwHJVgLCrAedcOXgCc
                ZW0AqqyzhHXrLkl1lql6NxRWAZGsAZ0lbZrBORXCGDWAYWgFSKhFpVgMoiIj+a5SC0MMbTM6y3wayXP8
                MRrKaONtwOUvHbZ/nlI8hLEldVe+FxDeOOWECPwiuEB115Ndc5K4lvCETCohgJBcykJzgDTgDTgDTgDQ
                kAcykJLhDeKAEgSC5WuF4SAOCrgR9VcwVYDwqqyzrjKjrgZrR84VwWfWDj6iteEOBVeYYNYAzqL29Neh
                VlnnXDJrLwkgSDVDEggAP8RFADzQYQ4COyw1YbCGzDC7ajM5Uxh4smyK7BGAWSYzskSG2CibLSCrZJqa
                7LTBgDJudhvrrTCTUJ/66XEZWmErO2zYqd0KcRnFhclFlc52V7QYLIC2zdFhZT2F52A1GyssW0WrW4Ww
                9hpZy7cTaiQBosn7dyVvB3j31iG2BwVNbIOq4MmNPwghp4Hj5zmrVYELV+atJVaPtynaPOMxzDE2jJSW
                sMcJhRaBhTZBjJesncg2S4uyXMVg+qbCl/PJ0NW9ddphZXcdhUOZwby6namU8xS+2wk1ztMgFluzmLsc
                4ckWFlnaVtBgnhWmAXOvd2F5NlcZ2V4DRZgOBmWmGoeXQlWNTW4Gz+JgkWKSQEhTE45ZOE1yT4XPaBZh
                nEeALgDraYNXjLrbUMrb5sJltewqX1nrJ1YEkts1W9JoFZpmojb1DIXqJuPUTcSmVlNQyGKzOVdQl4FV
                q1IVKYSmVripMh13Eg0sbkVCxC5SlCzSp4E1Zo1UlJtBCSUz7l9NNjGeKcuZbbRneAs5aZZrRzfSjO4g
                M7jm4NG5YxHjEK+6aJEuEzzApi2sgywkfIS5myKyixxnvAHiJVt2db5yrT1jUUt4NtPjLrAsgqqrEnOu
                2FLE5pzXPgZUNmWFS1FlROQtMi9lU2ZNZnKuqQSFRqwQklGlRLMKsxEVWdc0uaqahaIVxYpbFiyCkOqP
                TWsmtRXNbfxxYWSucZHsBodgBFloFTkvHU3gCPwm2AP4MYKlg8Tb/NDgKf8A0R10nk+Nqznq6uR4yrGD
                TrhkREf+mIoAe3+2l5xPciRKx+sT3CzIMSxrpU2GTyIfzZBCWTMRkmEZExMc09tL+SN4aSQxmsTO8NJK
                BzeGu8c3jpuHbExMSYjjWwoFs3/jfyStOwkhBC2tHE8VjFRvzYLBOa36S9prpk04fW3klbP3CLAcnJsk
                TgzB+3EWQltyV9YiMDa0oibG47nyw9kLbyxuSwTxb9sVWcjhg4sLKYAWbshxm3s60wYB4mJix/jXAw5Q
                MRTBZ1zWg66CUBQUbrC2wwamgItwJV2LOKn5lKWcJ2l8iBndlOdtYg3eSXBDMrKGIEgFanAVYZCFiS4J
                f7qBKVgJhmw5iqeibhQa3lDk1AlYfwzpESYweQMROWBE0joQG9SxIxAGWUJKCgsJ6gYRiMnsnDMVjzLk
                I2HkNCSExKZmBgTEskxHFsBolYSIIICweOmiDCV8g7P/AMW1JYJieG0AwnqBn+I1jUDEx+PIG6ZgYhy5
                bvHeu1WL4LepswYySYAcNqoJvEczMDHKG0ZghI4HImCg3qWJGIAyyhJQUFhvUsyMRyTGCMxAYYqRGRIY
                YG4HqYf4rUkNdjCEmtLjOYPJIjdNo9ovPmUyGKtQUs5NvijXM1LLCOg351zMx5CxAHDzLsKJgYJmyFCc
                BVJgJhbBYn6mzt6tXkhtad2RLQykQwl25dAyEIOOOsrew0vNoNUbHCTJtP5Bggjr/wCFmWRYB8kpTNGm
                RaqdKkdhmkP3YH/aNYsMn987cNkCmb4/NZqfmgp/UIigRYxTLW6a9hbBhvI8V7iKtP7S1By2WbfFGuer
                ZYR0G/Oop08hYEGDYMuYCYEgZHigZtrEwFStgloB2PxTETG0ZjaM5pGPEe3tGc2DmwcIRLNsbVqAhkYI
                dI1CNWlWQZSMTmwdxrBmbB0yBgcJYQIgIrEBHOMJbAwMbB2sjexiltwVgASsJiYiYFYAMRAxtjcVZBl/
                hdsa7BzaOFEbKYx1tg5sHNPz2BudH5CpYTtjcf6axWIqBCVTtHBEQjiXv2xumImNo7SUGpCJZtjatQEM
                jBDpGoRq4qyDKRic2DuNYMjYOmQIxgV0LL4//8QAMREAAQMEAQIDBwQCAwAAAAAAAAECAxESE1EUBDEh
                QWEQIjIzUFJgIHGBkUKxIzBw/9oACAEDAQE/AfoLno3uVkd49k9RXRJ8TlUvh+0vh+0aqf4P/syK340/
                A3PWtre45zYfVw+Rz1q4hjRzkv7DIo2Sq0ZBG9quFRU7jJnM8PIav+Uf9DXI5Kp+APfahI7C21PiXv7E
                So5VSNIpG/0Rw9l0SRo2leyHUq97Udb7GuVq1QRyfMb/AD+ANX3lkXy/2OjlctVRTDJ9qiRyItURR83U
                u2Ml6hq1VFUu6j1HPnc21UMT9GJ+iBHtdRU8FI/CrNfQ6lSqFUKoXIXIXIXIXtL27L27L27L27MjdmRm
                zIzZkZsys2ZWbMrNmVmzNHszR7M0ezNHszR/cLPHTwUYiNRjV/cld1DEur4HMl2Rr1D23Io/qZWrSpFP
                LItKkr5o08VOVIJnVKoqGWW62qC5080Ff8MimeP7jNH9xmj2Zo9maPZlj2ZWbMrNmVmzKzZkZsyM2ZG7
                Mjdl7dl7dl7dl7dl7S5C5C5C5CqFUKoV/XQtLS0sMZjMRiMRhMHqYPU4/qcf1ON6nG9Ti+pxU2cRNnET
                Zw02cNNnCTZwk2cFNnBTZwE2O6RGJdU635lBlHNxLoxLkxjaY1RPI6WFJH+PYzUmSNvY6mZY3onkdVC1
                EvadN8n2dV8oRL4KepwE2cFNnBTZwk2cJNnDTZw02cRNnETZxU2cVNnG9Tjepx/U4/qYPUwephMJiMRj
                MZYWFpaUKfropRSilFKKUUo4tcWuLXFri1xa8seWPLHljyyQskLJDHIY5DHIY5THKY5R7JESqnW/NJZM
                XUIpO1rFWY6PxhcdJKkb/HzFhdnRydjqoXSSJQ6uRqMsQ6b5Hs6r5QxP+D+THKY5THKY5THIY5DHIWSF
                khY8seWPLHljy15a4tcWuLXFrijiilFKKUUov0R6VaqC0c1kipU6hcvjYtSR0r2I1U7Ec2NtqMUfGtfd
                apAro1qrVJpHSdkVDG/Q2W1tqMUtj+xS9Jfdc0tpaxP3+vwqrVdGn7oL1syeBzpTnSnNlObKc2U5spzJ
                TmSEU0krrV7DVucr/r72qvindCZmVuVn8/8AQiK5aIWWJib38xEp+AKjmuvZ3HQtm96LvoVFRaL+mOJ0
                i0aNRI/dj8XbGttT8CdGjvHzHOd2kS7/AGLHA7s6n7nFTyehxmJ3eg1sCdquPfclF8E0giIiUT8FpUxs
                0IxqeX/nP//EAC4RAAICAQMDAQcEAwEAAAAAAAABAhESAxNRFCFhMQQQIkFQYIEwMjNDIGJwkf/aAAgB
                AgEBPwH6C3Q9bgubKfJ3M2hTT+w5zUUd592JUTlS7FycUy3de6iMq+wZOkL43k/fDFyc4SHqUyMrRCvT
                3xlX2BrPJ4GceTOPJlF/Mjp6URx02fAJRTtFotDIO19FooplMplMxZizFmLMWYswkYS4MJcGEuDCXBhL
                gwlwbcuDblwbc+Dbnwbc+DbnwOEkro/db/BF6UnSRtw4G9NPGjCPBJRXyI4y70YrgtXVH4E0/kafrRtT
                4NufBtz4NufBtz4NuXBty4MJcGEuDCXBhLgwlwYS4MJGLMWYsxZizFlMplMplFfoWWWZGRkZmZuG4bhu
                m6bpvG8bxv8Ag3/Bv+DqPB1Hg6jwdT4Op8HVeDqvB1Xg1vaMoVRofsJfC1qIcklZVakTVnihxShb9TTi
                nA05N9mf2e7TIPGdnVPg6rwdV4Op8HU+DqfB1Hg6jwdR4N/wb/g3/BvG8bxum6bhuG4ZmZmZGRkWWX+v
                RRRRRRTKZTKZTKZTKZTKZTKY0zQ/jQo56NGg3Oo8Gp/NE1oZLsOacKfqac0oGlFruz+z3afzF+4xZTKZ
                TKZTKZTKZTKZTKZRRRRX0xke2ULo08YKsiOEbpjhFvLIUlySakqshUFVmS5KV3Z+RKvRmn3d/X/aIJSU
                n6Gxp8Gzp8Gzp8G1Dg2ocG3Dg24cGEeDCPA6j6GnGl9fnFSVM024Pbl+P0G6ILN5fYOrpLUQtR6fw6n/
                AL/lKSj6kYub7iVfYUoqXqP2dx/jZlqr1Rvf6s3JfKJWrLwQ0Eu/2PSK/wCc/wD/xABEEAACAQMCBAMG
                AgcHAwMFAQABAgADERIhMRMiMkEzUWEEI3GBkaEQQiBAUnKx0fAUMGBigpLBQ7LxUHPhNFNjosJw/9oA
                CAEBAAY/Av8AAl2IA9ZZL1D6T3NOw9Bec9Uj4tOaqPpPG/8A1mlb/wDWe7rfRrTnUsPUXlqqFfUS9Nw3
                /wDhGNAZt59plWcgev8AKc3O31lqdMD4zxLfCaux+c3mjH6zSq3z1nOqt9p7xcW9f5ziezVPhrOH7Uh+
                PeZIwI/wVV/dMoV8qnCWmTVLHeF2pnZSvreIGoatV4fV94apo8q1eG3Nt67RKAyXLLpe17RKtNSy4FuZ
                tdJTvS66XE6vtPZy6BVrAm+W1oWahbc3y0grAbrlaVqXDAamB+fzgJo2tV4b83T6zRB1Y7z+0LRHflL+
                UoY0hat080D4XOlxfacThjxeEeb7x/aOCCqG3Vvr2hp8MZCmah5u00TTg8YEtb5QEU9eDxm5u0CYcrJk
                jX39JQc0gBVYjq2tEfhWyfDVtBOKKYHNjbL1iuaQ1rcLr+8oU1AcVb8wba0ooU5KhtnfYwK1MC9M1Ov7
                Skq0RepTzHP/APEQpTuxpl7QFqQFyMQX3HnLimMSeU5bi0pMKfNUDHG/lGHCtalxOZrfKLelvR4vV9ol
                qV2NPiY37T2upYtTXDlLbXlSg2K4galt5WXDHhtjvvPHpf7x+o51DYTBOWn/AFvLtzVJYcq+Q/Hl7dzO
                bv3EAZbt53hopzHtMyAR6fjyN8pw66hWnEotdP63nk/df7sMrMpzGxlRny4Tuq0g57xUWl71suUm20Ze
                DqtHim7faUw1OwqU81OX2lR6vECUSoZVew1/jB7sEFwnV5yoOFqlTDq3lajgM0tiM+qIr0cbsq7+cqDh
                i6VMOveFadLJVfBjfaApSGV+Zc9h5ymzJZKgYqb/ALM8OwKZgyvTFMe5tc5ecRnTFXVmXXyhrf2fksG6
                uxjOqBlGoOW+l4tXhaFM+r7RlSkDjS4urdp7mkX5VYi/nP7Pwhlhn1+vwgTh2u5XRvLvDUWkSuDMPlAo
                pjWjxev7SndAAyFzzbWgZ0sDT4g1jApjYA37GLSNO2TFd9fjMBSGRZltn5SuWpALR6uaVL0+ZaYqWy3E
                qXTRKYe4bz7Sr7q70wGxy3BlOmiXDpnleUPdgcUMTzdNojOmKurMuvlOi3KGBlWjwwHQi3NuD3gHCF+N
                wrZ/eMTS5Fq8InL7winSL8xUa9xODiuWN+vve1opaiNcbjPa8KKhIFThk+sojhi9RyvXtFHC1arw+r7w
                KqHEsVy+H98yXIyFtJ/Z9WS1tYfZ2d2TtftKWdWoxptkDpHoqrVFrEliSOWU7EqaYspEamrvgUxtfaUz
                k/u0wG0ojJyKQIAPe8ReJVsgKjXsYtBXNgLXPlKrM7HiWv8AEbSvTprk7nL5yk5ZwVS2N9IqBn5bi+ne
                ULFl4PSBMGLDW/LMc6luJxe28q0iz+9bJj3mWTBsMCR3EuCw91wrDygGTD3fCJ81iHXkN19NLSiuT2pN
                ku0Wnm5UPnbTUxcalSwN7E7xVzqaVOL23i1Az5Kxf4kwUWp3TRs77RkPcWlBUL8NKZXPSUjTZ0NMY3Hc
                RnZ6mRI7+UslRglyQumhMpgVHBpE4MN7GOxd7vT4Z+EU5Py0+GNtpSKVKitTXC+mola71Pe2y+UqFnf3
                gAYadpUKluc3N/1Eu/085m+iCcKgBcd5cm5/HlUmNTqcpv3iW2JveOxtdNpkdSb3MdcgWItYTM02x/Qw
                q8yfwn9p9lOm+kxfSqPv/dBHZgL35YEYnQ3DDcGU2NWpxKez947l3u1Phn4SjSNM4UbFXJ3jk3s5BYed
                oqtUqHF87k6yoS787BjtKjFnyqEG/kR5QualS5YPv3Efnqc75nbePVR3GerL2vKZVnuhNjp37RdyqZBV
                Pa+8wFR2UbBu0q1bkmrbIHaAG7KqlVB7AzhKHroeWxI0EFLMhBTw0+8VWqPonD08oy3cUuDw8tNYr02d
                CFw5e4n9ou2WOFu1oOZzapxLHzj0hUqcNr8vleAh30pcLttKfM5wUpY+UscmGHDF+wmPEd7aDKCpnUuH
                L7xeZzZ+JY+cr3LEVuoGOGZyWUJf0EfIsc0CEQtkxY2uT6RGQsMFKgSjZnPCva9u8AN2VVKqD2BmHEdg
                NBl2nHalgygoNd5TJJGDZi3nK3GyC8c1AvnKhSpUUOb4jzlrv0Yfe8xes18rg6fKNUV2GerKNrylZ392
                xYbd4Od9KnE7bxijvixyw7X/AL2p+6ZVUFiopXClpWvRGVEjIB+x7xiFBAIA13lXGkuVNymr72lOsKWj
                sF6tjKzdLBTsZwmTmFNWBy3lRjR56bWZQ33nAVeXh553i0XXlYXD3gqmjZOJw25tvWUlKC1RiL5eUpPw
                gBUqYdW0D8HetwuqVW4Xh1eH1T2h+FcUSB1bz2hODc0bbNveVyFF6R89DPaSaQ9wQOre/wApdSD8DH9n
                NIArrfLdfODClowuDf17zjGly54khu3nKtJUHIL5Zbys3BF6PUM5SHDGVQZAZdrQjhW9zxeZrfKf2nD/
                AKeeN4r0qQflu3PsbbT+0LTBGGRGW0rUyuDcDiqQ0Wkycwoq4OW8r3ojKj1DOUL0wDWF15vS8RWpFQ9P
                MXP2mWqsbDlMZMWbGoFdmqXtfvKIIKhnPMH8vlKBw0ephdn2lGkoDCrfmy8pQ92BxSR19NpxFoE0ypKk
                HylSnjYqAdDff++LsbAS50pj7TgUdLbkfogDfvA6C9t43sz/ACntCncTL/q1PtFqFeQG+syYjHzmn6GL
                a0z9oPavZ9t9Jf8AOOof3y1s24LNgwJ0GkclmI4OYS+kpcgAdCx5um0F6dsqZqLr5SjUNIe+ICjLuZww
                nvC5p2v5d4qsnEbhlwct9YfaFphlsp6vOe02pg8C2z73jVVphkVbkh+/lCOFtQ43V9oL07DhcUm+0JNP
                Xg8YDLtMRSv7ni8rX+UenjYqAd5UHCHJS4nV/wDEPtACkhMimUe1MctHi9f2n9pAUmwJTLaVbhxjTB5a
                m/2h9owvZcsbx8qdgtIVN4WNLZlG+msr40wRRO+e8o1eCLVWCjn8/lKilcXptidbzwR4/B6/vtKhNLkp
                1OGxymKoSuZS8YPTsBS4tw0biJYhA4AO95UqNQ0T/NvAxpDUXvlptKJ4YtUQvq1rRaop7plYmLaldjT4
                mN5X934WP5uq8qqaV8FDdW8N6WyB9Wtf4RW8x+ooA+Kbt6+ULl2bNcHB8pXsCzVFt9p7OHLq1Marff4w
                8zXNTiXPnKdG7BUbIW841NiQGFtI12c3QJ9I2/Mbt66Wi1FLctPh29IGe5sQR8o3s6qzpVJyYkcsotdh
                wekCU0zeyPmNpjnU8Ti9t5VRqj4u+fa95WUu9qpBbaVrvU99bL5RiKtXma7a7yuC7++ILbR6l2LPa5MW
                sXfNfh9IVpvUK/lXTSEVcsqhYuPjH1azKFt5WlWnc+96jKNndWpdLDeM5d7tT4Z+E/s92xwwv3tFdGe4
                TA+s9sp8M3dzgPSXqM+bUuH8BDdnN6fD+Uqrc+96mlFQ7g0ehhvPZSoLYPzH0hpvtHp4F+P1vfbylE3I
                4PSBKaipU92+Y23iVFZ8lJP1lGzv7okrt3j0hUqcNr8t9oXVnJKhdfT++Hs1PYHX4wUqfWf0Qo3M5ahy
                nKjfC0DNTanUHe0Om+84jI1Q9lAluGwX9kCZVSV9Ja9wdj+jwKnQ214HXwz/AAgZTcH+9dXuwZg1jGr5
                vky4dtpS5nPDUqAfIzqbRCi+glOjdrUyCp7i0uC2YY1Mu5JiVWps9YLhhcaC8/sxuqnU2le7v762W3aV
                AHcCouLAfxlxUfWnwje20XViBT4dj3EILOfd8K/ks66nhcLftLrVqg2AvfylQ5OM04Z+EILv4fCv/ljH
                N+anwu20xL1OgU+20di73dMDtOAS2NrX7w3dmDJgwPlFpPVqMAQQdO0r8ze+6p7NSpZMKdRTfvaOQSWc
                5MTOup4vG7dUr8bIIa2YH7UqNSqumZuR2v5zIsSCnDIPlGD5NkoS58hDQerUYHS/eU7u/uxbQ7ylapU9
                0pVdv5Q01epiVxtfaU2SpUVqa4XFtRK13f31svlKjMz3dcTtOZ36MO2ggXyH66zm9lF9IjrSqMGF9BtB
                WCvhiX7dotMI4LU+Jr5R0pZcRQCT5awAo4PE4Z20Mp08HvUJA27SiwR7VWxG0W9OpzOEBtveM2FSy1OF
                23j6NyPh8TOlr8ThEeRjcr8tTh/OcVVbqxtMsKnicLtv+GS036itu+kqKKTlqZsVlKwb3hI+FvOHkZbH
                8w3/AFksOo6LG9oeFz3/AEQw7TlU5Tr+06/tKheoM+06/tOv7CWrXJ8xNrKNv0ih8RY3s7bjVf79KOLF
                nFxaahgAwUnyJnKlRhqLqPKI6IxDD087QkI/icO3rKRCOeKSAPWLZWzJK4d7jeUvdVPeGy6RlZKgwALb
                aXnD10YKT6mLyPrU4XbeHkfSrwu28qoAwNM2N4auFTEPgTppMsTKIVX99fHbtKSOG94bA9pVbCoRSNmI
                EuVYjILpbvKjYPam+B23lc4vaibNtK10f3QBbbvKgxfkTM7bS2Dj3XF/0xkCsGUA6+scYVOSnxDttP7T
                ZsMcrd4Rg+lPi9tp/airYWvbvBS4b5lchtrA7qxW9tO0xwYtrYDvaCqUfHHOYYODw+IL21EekKVTJACd
                v/QHp3tkLXilaumOLLbf1ntdHVQXZVuPyxKnEvjRFK2Mq1U1zCgrb1lSk2TP7Q2WSroplBshajflIveU
                KTVAy02J6d5STj34VTNbr9t5UpmqLNV4t8ftH95vUFReXa08TU1uKeX7R1WtYPV4nT9oFFbkzLEY7zDi
                jxuL0fbeOM8smy9B8J7Za4XQrp37yrUzKXqXAtYG385SBfRSxYW6rwU2qcS2xt+srRGy6RPZ6f0nh/ee
                H954f3nh/eeH954f3nh/eeH954f3nh/eeH954f3nhfeeF954X3nhfeeF954X3nhH6wE0zidDrErr31/n
                Aw2P99Tr59AItaNz8jVBUIt3lVg5alcvgF1h4eiu+fN2HlGXjCxq8Xp39J7JTVsrVCb47RGSrasrl8sd
                NZQY1NabZdO8q1OIBmAOnpjVFqcr2yDLcxTxBcVuLfD7RjxBc1uLfD7So/Ftm4bRdR85UomoCtRix5Yt
                NqmZAtlaezni34OX5d7yzNYSvnd0rm1lXaUaOdsCGJIveVkFUAVKmfTtPaEFUAVrfl2tPaL1BasoBOO1
                pU9710uH0/eBhXsRQ4Oi/eF0rgMVA6PKVSKnXS4fTtGXjWvS4ei6fGPaoOajwuj7wpxre7CaL95SfihW
                p9Jx+veGkys3E5eUSg1OpjUpC1yL3lRWrdQsOXaUE5sqH5rWBFpVr59YAtb/AAWzn8ovKlZpU9obpXWe
                Gk8NJ4aTw0nhpPDSeGk8NJ4dOeHTnh054dOeHTnh054dOeHTnh054dOeHTnh05xbcy6wDuht/h3ebzeb
                zebzebzebzeb/ab/AGm5+k3P0m5+k3P0m5+k3P0m5+k3P0m5+k3P0m5+k3P0m5+k3P0m5+k3P0m5+kZE
                Ju2kJ/ahp1MubewgZQbH1lh09vxOXSIXcGw9Z7pGVf8AN+OPAsbeczNG+trXhKpgPK9/wF9oQqOCPMw1
                HDWHrPdIyrb80tWR733E2P1j06dN2qDvfS8q0TtKqVD/AOZufpNz9JufpNz9JufpNz9JufpNz9JufpNz
                9JufpNz9JufpNz9JufpNz9JufpNz9Jv9pv8Aabzebzebzebzebzeb/8AqO02m02m02m02m02mxmxmxmx
                mxmxmxmxmxmxmxmxnSZ0mdJnSZ0mdJnSZ0mdJnSfpOk/SdJ+k6T9J0n6TpP0nSfpOk/SdJ+k6T9J0n6T
                pP0guCJTX8KAP5zaZd1/GjR/M92af6h+Hko3MFqedQ7CYtiFtsBFZLXLW1mFemlz3tC9H5r+B/dg/fH4
                0/3RKv77fxlvNY6jznSfpOk/SdJ+k6T9J0n6TpP0nSfpOk/SdJ+k6T9J0n6TpP0nSfpOkzpM6TOkzpM6
                TOkzpM6TNjNjNjNjNjNjNjNjNjNjNjNptNptNptNptNpt/hCkPSUx8fw9l+v2gbzjL9IL7LqZxO2oX4T
                /UP4/gg9LyofI4if6Yn7/wCCN5iVFHYz/TB++Pxp/uiVf32/jKc/1r/Af4H3m83m83m83m83m5nUZ1Gd
                RnUZ1GdRnUZ1GdRnUZ1mdZnWZ1mdZnWZ1mdZnWZ1meIZ4hniGeIZ4jTxGniNPEaeI08Rp4jTxWnitPFa
                eK08Vp4rTxWnitPFaeK08VoDUYtbzlM/H/j8PZh5L/KNT+YgqDtoZ/8Akq6RIfiP4/gh9JV9WvP9MT9/
                8KYPlKrD9qf6YP3x+NP90Sr++38ZTlRhuGH8BPGaeK08Vp4rTxWnitPFaeK08Vp4rTxWnitPEaeI08Rp
                4jTxGniNPEaeIZ4hniGdZnWZ1mdZnWZ1mdZnWZ1mdZnUZ1GdRnUZ1GdRnUZ1GdRnUZ1Gbzebzebzebze
                b/q/ed53nebmbmbmbmbmbmbmbmbmbmbmbmbtN2m7Tdpu03abtN2nU06mnU06mnU06mnU06nnU86nnU86
                nnU86nnU86nnU86nnU86nnW863nXUnXUiFCxv5ym34Uv3T/xFfyltwYbdNPlET5x/l/H8LHVDLo4zl2G
                lt4qoLnK84ntDKAO14afs+p7v5S0/wBMH74/Gn+6JV/fb+MHoIyHYnt8J11J11J11J1vOt51POp51POp
                51POp51POp51POp51POp51POpp1NOpp1NOpp1NN2m7Tdpu03abtN2m7TdpuZuZuZuZuZuZuZuZuZuZuZ
                3ned53/wXl+y0+EWozrbe0WzgEQqSCfSG5510A/AVGdfrGp5gXguym/kfxLPVG22UxSqFN/OENZj8b/g
                B5wu9RL2toZgKijW88an9Z41OBcxoLbx2WsliSZUqdtrypV+J+v+Aq3LbhaHWUOTxhca7SvyeDvrvKS4
                +J67QDG/ME+ZlRuGSiAnK8pXp+IbDWVbU/DNjrBWPKuOXylsDljkF84/uW4imxSc1Mq2eABPeGridDYj
                52mFrnEtBU4bGna5byjaaJYMfK8KKL49R8oKPcgmYAXY3t8oKqU2dLZEjtMlos62vkCJTQ7ubTblzwy9
                ZUS1sLamZNyqUzB9JiVIbHK3pA4BF/OKcb5MF+sLtTO4G/nBRx5iuW8DrSJLXst/KL5sbARn/ZNiPWU7
                DWomdie0uATycQ+gl1os6ftAiKhpmzGwaDTlLFQ3rE00e+B84+hGLY6/qTp5iPSaHkysfKeD9p4R+k8M
                zwzPC+08H7TwvtPDaeG08H7TwftPCP0nhtPCaeD9p4H2ngfaeB9p4H2lUlcalTkE9WEap+2f1OscbcI2
                Ou8ocnijIa7SucPB31lJMdan2gGN7sE+cqNwyUQE5X3tKV6fiGw1lU8PwyQdZxm5VxyhGBztljG9y3EU
                2KTWmVYvgAT3tecXE72+9pja5xy+UD8NjT7t5RtOVSAx8rwoovj1Hygo97E3/r4zBVu2tvlBVWmz08ci
                R2EJFFnXzBESl3b7TblLYZesqLa3D3JmTcowzHwhQqQwGVotQC1/OLy3ybGZNTPUF384KGPNjlvFdaZJ
                bZbxe5Y2AjVP2dCPWJYasmdr9pcAkBM29BNKLMunNcRUNM2bQNB+yxKhvURNLBxdD5xtCMWx1/uPaSym
                xa6i2+k9iBRhglm9NJ7cqo3OOX10nszAPynm1OmkpDFr8QM1u0rUCpblIRv2p7JyHlYFvTSe18h5mJX1
                0nB6WNLHXztOPw25aeOPmY5NNwdzfvERluC16n9fGNT1Y7L52vFyBxANiu4aIlSi7aAvj3M9op28Ygg+
                W141hz8bMP6Sm+QcKrXsvwlKpbKyFWt9YlBqTsLc+P8ACUxjYXu0psHUji36NtD6xaVtq/Ev6XvPaAQQ
                HUAH6xKZGJSiV+c4xUqBTxtFDCx1/jKYAJ94pNvK8rABipdTTDancXlNrEjBsmt30iPi25Doe2u4lFxr
                g97fKO4YLk7NiVvPZ6dYGy091GqtKhYZPVohdP2v6MoUvyrufhEZQ6sjb9rSlRtolQsW9Nf5z2VSLcAG
                58+0rXBF6lx+p3/K2syVQVb17zw1/wB08Nf908Nf908Nf908Nf8AdPDX/dPDX/dPDX/dPDX/AHTw1/3T
                w1/3Tw1/3Tw1/wB08NP908NP908NP908NP8AdPDT6zwk+spIQAo8pT9nT+jFpj8ot+p+1FlNi11Ft9J7
                ECrDBLN6aT25VRufp9dJ7M6hyATfUm2kojFr8QM1u0r+zlSxxIRv2p7Jynla7emk9r5DzMSvrpODsxp4
                6+cPtHDbSnjj5mOTTcHc37ymjrcE3qW/rznD1Y30+F4Lg2C8pXcNFR6LtoC2PcyvSt4rhr/S/wDCGws/
                Gzz/AMsR8g4VG/L8JTqWyshU285ToNSdxbnx/hKYtpfJpSbNSMyTyenxiUrdNbO/pe89pFiA6gAxFtiU
                olf9Wn8oaxBA4eNoisLESmApPvATbylQWYjiqUDam3eI1mK8M3a3fSU3xbXldD213Eo1Brg1yPlaOwYL
                kzNiVvKCVQeVN1GoaVbi71aQGn7Uo0/yrqT8IjKHUo2p7ESlQI0RyS3pr/OezBhbgrY/wlW4IvUJH6dy
                bCWB18po48pYVBfa0ZsuVdz5S42hYMCB3nEzGG+U5jaDOoovtrLEzHLWY5azG4yte0slVTpfeFlcWG/p
                C2Wg39JkjBh5iXY2hbLRd/SJzjn6fWFsxYbmDXfaXU3Exy1hRXBYdpow84cHDW3nEzGH7V5xGYBPOBzU
                XE7H9dzHUmvyhpnqEsf1NvaH7xvaH7fx/XbFtt/SAFtTtBzjWLzjn6fWFAeYbiBSwybYTDIZWvaEBgSu
                /pCcxYawurgqN4TfbSZZaTPIY2veDOoq311MVcxdtpjlrOFmM/2fwtkPKFctRqfSD3g12hAbUb+ksG32
                9ZqYHaooU7GDm31gVqignaBMhke0KhhkNxDTDrmNxDgwa2/6dM/kFVS/wns2HUCSf3bT/W3/AHGNduVP
                aGbb1nttmW2VTtE5/wAnT/zKv/utB/7P/ERm6eG3/EShUZVZ0scjssd6eqBVzT9sekrr/wBQ+0C32lJf
                +oPaCT9T/wAQZ0SC1M5XI9JUdrYry6/eV72IzRiy+U9oDPghKAEG2v8AVpztlY2DeYlBm6LMP9U9oZek
                ezkN8YqVLXZBgfMT2v8Aeqfxj5fmprh/zPaGzwpmouJ8z3i0hY3rcS/cDeJZ093cAAxM9aRpnC/5B5GP
                VV1JIAsD2j/6/wCJlEGqaZsCpB9IQzoKhXW/cRCVxNtvL9dyXw22nGT5/qWvQN4vs9Lz+8Wmvb9drCqb
                MHYveewq++L6Gey2sDk3/bPZVDcxqs1yPQz2vKoF5F5hpbeey6/mP/aYP/a/5ntwTqtp/tlJ7jhrQ5vt
                aVnDDJyvSenyMXiala/Ow76af8QN/wBPivb6f+ZU92Wp87DUeZtEW2LVLL/Xyi4YHF1unnKy/wDUPtAt
                9R/xAaVXNXY5re9o4TqxNpiu+GIHfKVfzWppxF7kaz2NlIIOVvpPbguvRcDy7yhwzduICtvKLVWqDw3J
                OR0+EvUxV6jMVDdrymvs79NLe+jLFpErTyAJDHYSh+6//Erf+2n/APU5a2dEqWNz0yr0sCAch/D+40UC
                aC00AE6RNpsJawtLWFpqom0vbWXtr+FrSwGkxxFvL8LGWsLeUtYS2I+ksVFvKbfhooh0Gu80AlrC06Rp
                LkDT9eKN8j5Q0K20yXo/h+oYr8zODS6pxXHvG+w/XrkC4l7C81AmoE6RrNhL21l7TYTQCWsLeUtbT8cr
                C/nL21mg3/DKwv5y9hedI+kvYXmgAvNhNQDNhLlRL21l7aywAtLAW/TpqptnUCEw1UGqAnG+8bQEALse
                7G0dzSHL67zmAgoVM204i2OrCxNvrGJ2XuNjpC61AfdNZbym45sqBZvU6fzhpNfinG738zae1UtcVUEe
                k9mI5zpyft6QMHPUPlzbR0J5VpZD4yllUCt7strvqJ7RWB1SoAvw0/nBVvzH2jD5XtKFbd3LZD5E/wDE
                9mGR97SJf7az2hVzQ3WwJ7HS4hor0Fk+V7/yn9n/AOnxf/5vaCi3QGqfO3/mBHJstM/9xF/tPYahJux1
                9eUwrci5AuO2scXxqqDnbtaVFxBwp5j13/lKt1HIgfff+rSqMQSgB33jYICFbE6yrkgtT3sfSeF+YKDf
                e84RQCrkRvp/WspA01BfTq20vOGUHXhv6XmBUDly0MCqOiqoicvVl9QbSldQOJTL7/15xKuA1QPa8qjE
                cjKPjf8A8wkKMAxUm8pnDSquS6/OWxA5Q2/nPalp5Z4rjZrWM9o4isyrTUnHtvFKm4I0P99caVBsYaFc
                emsyTVf4f32m3czh0uuf2ivvuoP9/XL/AJHwC+UKbgIXBY7+k5KeRFsh8Y1MovKATr5ym9LrW5t+16Ti
                qC3E11O4ytpApcJl3M9mQtdeDc699ImmQSnm2tsv6tPaaqm3DQGn9LylvrTbT6TFtuIbVPP/AC/15T2s
                i5xUED5Sgxa4ekS3x0/nPaMauRLILg7XtDQHQXT73/lOB/0+Kf8AtvaCi18F4nzsdItU8QsO6nax3ntb
                g+GgKfS8r1tnSoAo+n84tW/MfaMPle09nrbu+WQ+RP8AxPZdSeLTJb1Omsqak+8bf4zO/u25GHkexler
                uOEHVfrHsg5aXE3+0qEKDhS4m8cY9ONj5km0ZjTXl9d4yrTydRcgRjwxglTA82vb+cDIgKG/eNUwWwfD
                f/NaZBRuRv5Tj47gG3xjhgLNWx+eMpDEc4N9dpS5BzqW32lQ4C6BTv5xlsNGVR84tMqA5v30sIrYDVWJ
                ue6mVXGhwuJ7S4yWnwdAW/N5wJiyvhfXuP08HFxOpm+Mctc5ixhpksQdyTrMcmHqDYxNOjRT5Tcn4mZ9
                7WlrXGOOvl5Qg3a4tr5Rt7tuYi68nSfKcPW17y5ve1vlMCNBb7TLzIJHnMvXK3rLgbXsPK80vtiNdh6R
                g3NkLEmG+pJuTPXLK/e8FtLagwAC1hjp5Sn2w6bSxvveVAR4nXbvHLX5kwPwj3vzrifhHvfnFjOJzXO+
                uhlS+vE6hEVC5s4JJbWfmyvlkDreUzrybQk3N2ztfvAVy0XEXPaKyXvmC3yiEXul7fOLa/KuI+Ex5rY4
                b9o/VzEE6+ULi+upF9LywvYCy+kBF7hcRfyjVBe7bxycucWbXeWGw/v/ACqDZpwqy6TOiRLMLf3VhMq3
                KPKcL2Yemk4vtGrdl/UDUBKsd7d4af5SLQPzXtY2O/xjVNbtvOJdr2tvpAFLKBrYH8EUXGAsD6QWGNlx
                08ptpYAjzgqa3AtP9WVvWO/dt5p2Fh6CPcde8N9STe/rPW+V+94ttMdiIFFwlscb6S5G4sfWZeZBI8zM
                vXK3rLgbXsPK8BHYWHoIbX1N44fmD7gx2N7uuJ+EI1sU4fyjXvzJgfhGyuclCn5Q0yWIO5J1gc5ZWtob
                XEql72NTID6Qst972voIaeti2XzveZc19bm+95wfyWtHZ79eS/S0TG/Je3zirrZVKjXsYRd9QAebyj5X
                57d/KLq2S7NfWDcWBGh895wdktjYeUNJr4kWMz1LWtc+X6dzDhvljt3gUd720ikOg1As3eUk0xa941PT
                EIGH3lcG10fEfQSqoqIxVrBpVVmW6NbO0oC6lqjEZDyEFIaNzZH4SjUFhk4VpXx2orkfWGrT303lSoHB
                xW+09oxKtw6eYYD7QFKi4Dc23hr3GYJ7etpUqKeZRfWUESopyvl9IwNVARUK4+YlLFgMnxN4DdR77h5d
                iPOE5q4voRHU1UBWpiB5iW179t7bxbX5lzGnaX1tYHpl187RdVa9UoVtrbzg13FxfuJudgdvOAa3LY7d
                4tieYlRp5TNNRAVvYi40lNr+6Js3pHdjyZYrp/XeHimxBft2BhA3G4P6xjUW4mdAll+8xrrMqTzpv8Jr
                +jyoZeo9h6S1MZNP2af2mmr/ALR/WCx2EfG907EQITc3xvbvC6uqW/a7yja3MwBlOnpiysfpb+cq0zay
                hSPvKtPOm9lv8DKlNmVrAENaHmRzxeGrCcD8+eN/S15VYWzptjOCmhwyvOOuhwygqZjpvt6RRdWypZkg
                dJlMq67Aubfae0tcXplgunlM782F57MRUXOoVDD4ytT4qLiQFv30hdSAbjf4yvYqeGVs9tDeH3iuPSVq
                fFRcSMb/AAmF9b4/PeJa/OSBp5TK5xsTfExgN10IMq6qxWoFCW1O0AvubA+Zm+lr3mt9wNvOHU6Pht3j
                Y/lNjOW+5G0FRegHn07R3LDhKI6v+3ZdPS8svkG+X6YAItfWEsR1FvrMC4NMbaaxqZx4bC3rKb6WS8ar
                pYqFlYgrd2yH0/8AiVKilRVcAekt7v7xWFsw5f6xaikZ81/W8pU1PQwa57yrY2FVcWhpLYR6YsCwtHpa
                AstpmpFmHOvr5w+zgprfX53hS2DOut+0ovp7u9/pCrMtjV4mm8p2tyPlKeNuVw2squTc1GvptGRmXFqv
                E03gcupIy7b3lOxHLS4f8P5TBKgA5ftv9Y4JGrX0EdGscmJ09YiVGuKalQR37TBqq5LbEgeXnKWbLytk
                bfC0pgkWV2bT1v8AzmGm5P3lOndbKLGFBjZtGy8oiLpgQR8oSHxINTEjzJjsSvNbQD9a501/aG8yoVL/
                AGM97TPzE56f/M1UD/TO33mw+k5Kf2tLUqX/ADPetiPWXYcRv8360VUgE+cdiRizA2+AjWccNmy21lhj
                iRreUUQ6UyN/SU6mllBH1t/KVKmnMAPp/wCZxThxAuIttDdqZPw3MZtA5YN9Jxb+8zz+1rSpTBGTtkTO
                KpAbHGcBP2MRecPS+OMFLS4XGUirDJVCP/mErpdPekn4XmDAK+OMoU7j3RU/G0rjJQtYj5Thqbajf0MN
                MWF7SpWYi7gCwntAyULWt8orZg4vkLjW1rWlI3F0ZifW8YJVsWWx+PnKjErz2NgJVY252yiITyI+Y84f
                Z2qDC1lIGsAd1yyB5fSMAQAaoePtZmuLS111csfgZZcb/wCaf2dTbTeVLkDGrlp+7aZsynkCmw3/ALhq
                guVBtoIpxe7GwUixikXbLUARW5ny1GC3hutTTchCfwawZseq3acbqS19P0kU3u5sPxLubKN5w7MGtlqO
                39+B5mwPn/6HzUkPynhfczpb6zw7/wCqaUU+k0/9GuZTqYjKpspa0CcMcTDIjLaFqa5KqB2+EFOkFfS5
                57WEA4AwLY3z/wCPw0YGUlw5HNsr7GOCAEX81421wxGhnKQfhNSBNWH1lwbzg4joyveVCwChGK7wHIa+
                s1IF5a8vkLfGakCWyF/jDzDTeXyFplkLecuJqwHzgbzIEbSxVrfp2pqDrrc20lRfaQqKaxtz957O1Rro
                M1DH7Ti1NEZXxv8AvXlMFyntSpdQG1+kp0/2jc/KMFYEqbH0lRalYoyuSdvrGSqSo4LMovbv/wCJYG9D
                iWvl/l8/jKgcm2RCm/b4xld24fFNjmd/KAtW5Gpfmbvf+MqBqj9FP8+2uspK1Tau3ftiZR95exqDmqeR
                0lV3cqCE0Y7XjLU1y0CjcmV+JV96PZtxprrKvvLW9muLVDvKSXtaoBcPo2hiNmy3dR1W7wgVGBRk6m7X
                njH/AOpt19pjxSTxX/P21ns7cTL3bk5VN9pWNz+XlJ20jUCXxJ4ga528vrKNRarlrsHGV9NY6CuQGppY
                h/WUuIxXkcEXtqO8pIWOVqZzD+o3hxYHE2MVh0sze7/+2fP+vP8Awcppuot+0t5Tpe008rjbhnSKzBm9
                zj56iVaeJLPSAFvO1olMKeNTxs+P/MTyUX+f9XhIvobaiUQUYNqOnaFGy5tBiL2MUNzNkrVLd9dYSiFr
                VKhIta4ttKtRlqYYJ+Q+sNuteZfiIhKNk3vDp6SjTKsGFMbiah7cK1xcd5fB8B7QSbg7W3ikBsTWZhyX
                sMf5zGrTbE0cRpfuf/iIbNkVFOoflvKfEptw+FjbHY3gp+0U3cNSC6C+vlCFS3utDbS95RsjBkpFX09P
                5wE0mYY07nAjG3p3gAR8hVc8y6WlGiVYNwgdVlUAFiFtot4VClkuMtO3pGTUoG5CfL+6udhFUnmO34E9
                z+Bps1s9NoCLEHyl2cATNmAXzmNSoqmaQIzgMe0AJtkbCcM9+0yY2EDhrq21u8VxY+RmIbWMFYErvCTo
                BNO01OwvMka4mZqKFvjf1hZa3ELdz/CWd9PMziBhha94Hy5Tt+DlHBtq0OJ17zma0FNnAY9v8E2gZTcH
                9DG+u01nDzGflML81r2lqdRT30/Aim4a0ZQdV3jYMWu14KbsLt2gR3O+wP2lybCFshYb37QMNjNe8uDc
                GZM4AhdmAUd5jUqKp9ZoYEZwGPaDI2ubCBb6ntMmNhBVDAg6AiXW1j5TAEXhRXBYdv06jqxUqpMVDWxy
                S4ZvOErV1GF7ep1nDBBubGKWcqQ1QfC0Ri9m93ku1r7x1LN1nHbW35Zn/ad6dztymUuE1q2pUna0Z6al
                SEOnkZhTKg4WF54DhOFcW2EVcbGqbEH7/aIB+amb/I//ADOFprYtKTGjU0q2G21jOLe5euVZbetob0zT
                PbOx/gZTqcg4RcNrYH1i3ouc2LaW5bmez0NDg5fIHtr/ADntX7w/7RKmV8ce0qLW1q2HOO4/q8rk78Ui
                V1wyJqatT+EqkoUCO2/xgf8A6mQb5kzI79pwghdbEth5yjrhjQutx3/r+MplqDAMty2lpXp8vPT5W8vQ
                ypU4d8UCEIdzKtXDSpTxwY63/oxKDEXspc/D/wAf4GqKKjHGmGA9dYX/ALQpvT28jK4eporAC/wEQg2F
                Spa/p/X8YPeHHhk3texvGs9yK4WwPa0UGuVDoWyNtD5fKeJkbDl8plvQNbbybz+EoL2xZvn/AEZQawZb
                kW7g2iZ0XDNTa97ekY9kGP8AX2jKdldlHwvGroMmxxQDvPawqOl8bk/ePS4ZqKoXHGw/raBwo0IZkO8q
                UxY8aoCuuo2/lCoplCrBgWtY2M9rqEWU6D5CUP3B/CUuEbVrEi+1v6tGemCpFM6eUwplQcLC88BwnCvp
                sIFxsapsQfv9pTA/NTN/lb+cNLTm1b4Smxo1NKox22jVb3LV8GW3a9ob0mpntlb/AIiPyXpVGy7BvWX4
                LkVHZtLaC8o0ND73PK/aIwtamCq+v6djLYi06RNpR5R9JsJ0iHlGu85gDMbcu1oMlDYcoJEswBHkZe2o
                jv36Zk1GmW8ysFwDbaZYjLzgzUNbzgGIsNvw0G8qHBeYa6bwU7coFpygCMhUFXGRB85ZRYQriLHcRFO3
                V9J7ymr2/aF5gqKF8gIAUWw20liNJiqgD0lgLCZW1mTUaZbzK/4GvYX850jz2nSIdBbylrD+c6R9J0jz
                2l5liL+cV/zKdISqKCfITKwv5x2Ues4drr695enSRD5qtoeUc2/rOUATPBcvO0ytr5yxmNhj5SmuAspu
                NNpzAGY25drQZKGw5QSJiwBB7GXtqI79xyzJ6NNm8ysFwDaZYjLzlnUN31lsRby/A6DXeZJRpq3mF/Q/
                /8QALBABAAICAQMDBAEFAQEBAAAAAQARITFBUWGRcYHxobHB0fAQIDBA4WBQcP/aAAgBAQABPyH/AMIn
                Ktqolh4APMUruX3ziccXj8JDNte6fz+ceAfWn5m75COIPsvJErZ6pK+Ls6//AAdQKtBzEUmi+n7gTxn+
                kdKHrl41NRHWd6vDGL9cU77zNI/SPvjflNePlDBNuRX0R4W8jB9mWAK6aH7gpz5P/FWsFEYRpMS+YjlK
                3VC7lAFdU46F1sle6svF6aaiLBcJD0BYOI6msc4mIGc/czTfMVhAbseHpMhqd+NmFSxJXQFma2/iFRBW
                T2uWQw24NL6YgBbsKvZklpcli+Jeddp18po46Mbiq0Pk1TF5KiAzAGF9q9CNBa1MQe6tQNIL9peGpaC4
                yV9tzDRe4HhuZk0UOHRrLFMjqo0OHWmJnxT77UZat7UU8rUuoPtC7qXog3dPCOCsdAX7xjbor0Cq5lRO
                Rdq9G4hu67A7QzZpvwNUYy3cRiMYlfRiXbaWvcb12mCkjwndXMBzAnIfRW4hA/kaTJZni21UYyyh/HaK
                jg65leRYczxUd8bTP7IO0Xf6Imonl9IvFHjj3Qen3PbpL1P5G/6twlbaCDgiaaJfSjNksys/aVVHdrr+
                ticOXkfaGOAV/DLrOT/iVzWZPx/jrNAthr2hu591tt5Ql5nQoPS1zxG9WkUv0Sk/f1mr4S31JDPYQJ0X
                uHq1FpKAHW516S6G+CUul9MRYFtHPDZ1BxMgYa7W51OoYW1V3XTiMw8Yu+uH8qJkz0GtrIpligZKeHG5
                W82ruC+ka0VRZrr9ogbgyb+xsg4KcDQ7HtO5u2Hoay1mAJQtTfRrcVgyYoa4EG0bP0YV3SxStmp2K1Mm
                BO/Fxi5zsRVq8JbqNl68KqKDbptYcesRDQBmw61xFr9FvgMU6ME0QBZsbcYGZlDSLri8Fe0tB1o4J3qL
                WV4tW+h1gxmsPIVxLwUhVrF1r0hj1AP0Y1ouizW9+0ehdwmRHi62RUEMfZHSCWg+uHhGl5TV32VBMhTb
                BzjAuJ7nj7Z/hLoijYVsa4qBSLBspuq1xKoOgZY86j1+z2/CEwiQzXU9Bz/mBACJ2mZLrr0+kxh8Liya
                qj7ysATGynXELI94BN+ly7tfpCVDAeVgO0xtnVG9tVdNwYibgoYN4maNZh9DUpiExl/ggdE5asosYhkX
                SltiX0IOqVuusw+AllW5qKgG8K6ZgoKG6zZFVWXN+GUcGRlm76VxLAslRa+0Uh3KFHjuNdpZgvoOJqmk
                4/kx4hJdVjkvXE3QXn3GNSuLdSUlHOOpA8WrN2+nU3CZk6i8faXkq4DIdV6S1AGsbLgwvJQ6cfiPpvCl
                pluzrLQBbpjgGNQk+h5Axr9zB/QXUDinmc1aA/DcTt/sxXTcqaAFt0XEepMdE9FYmE7gaJpxEjsQjHp/
                oul6cl0iV3GK0dicTwRo/bHLk2v9bTG7onWPMJSBeIy/wdJ5xzKbJF0ILny5dOsyjltdf2Ud+m3L+xML
                sl67kwCBk+4/xFEY1bPUh4qDlA5gTDKKbb4r6Tnp0H4biELT5oJX2ipkV6ekr+ySKTV41LwF0OxqsamI
                /OS9RwnGT2djiZPianR7alhFUUt1agA7ltk2WNR04xJgyAsIGGHsQNawGhRWIZchrGxAjUj1/wB4GmwE
                vO2T0m2L5gu+ON68TLTGnLs10gLVoRRdbJQs7xNl9JjXsUK8SAeGCxXNWPvLRmpn8O4oUTEKVu8Ql8DB
                Ro6gWIwdMEAFRRFW741ECu4QrxIGiLaD6YixRlyziMRaDoCVRp1uOPR4yaGpQZ4kqnfERqhJWRteIRch
                ruJSgNSjDpglspIIa3h/nWPDzwcjriVqfiVHhi8zNChcmJ0z6xrZrdxHRoqcOWJeN10X6tXMmOZu214j
                jLcu8vDUA4bkKL2v/LxFHAjTdQKskNXfdl/7MAOgNS9tEdau3eLeISgXdUoPai1UUeO0QmcHH7wqpfTn
                OcY+svM6eaq6NZwQhaVPIXWoder6hnFe0p7zR87EB3LutHLUZdA/K1KXuC/VqVFujz76lDj1EXepTiQ6
                u+lM4IGOLd3UWqsgkd8GzUxgJC7D2HpiWlLjsAKcMYzHOzfjFGq4yRFdSFQt7YIXmyTU7U1m4UlnyhS3
                TfEvDBzD21uW0Pwl1dQ2c0DrhpBkULvqq16+Jaz1aseCmXbmDz4zjH1jlCalglWU1zKsAbyKyXiIqoSp
                s3SpewjygvR/MRa2tU6ZGpU9B4Q2m0t12lbctrUELxhwKekvm8kZfQma7GCqqq6stw2VQafj/NW6drF9
                +qdH7nZCcDsf2uraL7ozahVNzYqF34hJ0iPiZ+miKtWY5xBivojFoovX9l/FWT7iKtrZ09ztNcmHuf5k
                RkvbUI9plaNjBkrHpLxYMXp7Jf8ACjzODjEpCKGv6mIB27YQpm1RNItMyIRxuViPiM8NcYlJhh3+CgXf
                eCK6P5UFrP4OkGczFenTWZiTO8nRrcU7x5h9O5jrh243x7RRuld+0XkmE0surlMTmJ+iJAspnbvUctix
                Vl04O8xqwg/6KgZ0wl7vjU5pI3EDY1xLC8B4FX0mEUrwy/COX0SUeozboPfQqnKIz9QqExQ08Ibca4lO
                1msY6ajblXCmFeWBLtfTxSY7/SZ1qGhVi2tuoZGRmsNah8UR10outTJtbxbF6MZYSNWiBq+jXFxjhYzk
                416xsL6ovGGaluFINXr/AEaafdAKiqZ95Vq1KZ7aCm6hVc3dZqgTX2gwX3alnFbiNPfGoQBpEW7ZxLNh
                DtHCQ6Ka0dbxNqS+rtNapg2zQsVlfTdy7IJYobV94yfXIDz5nYFQrVZxLSOcOT3xqY+MZrt9Oo4AZ+Tx
                rUE5pBwrVYjjvA0T0ViHIYqvCkcaldLUHCtViH7N1OCjUu+xpNh5Y1+4BzbbV7cfeHTSETLh7Y6RW+1o
                oaVjtFqDazq36RMA6rYVWcVL5W5jb23PoNGiukCIAFlE1eNw8H3levzGdAldXzBiYQkaqaa43De00VDq
                ulalQhhRTFdKmbTvL1XLYLU2bE5lDX7cC9ZVEPaXQr3x2lZwi3b6JUxqtMu64mTXNHLleIL4YKKvusRg
                IC5rTj/M/N1u7/iPRg3+Zv8As3ElEXfifZlkq86GZApkrch96Fpni4CWi6+K9+sR8HKZgF01/wBoVleD
                pPT0ZYi8PXkfztK9jsf8qIrijCVrHaV6LoMPojoAQBTsvEpluRJm6YmxCnqzTiCqtUVyHEy0pIWXa+8M
                lVkl7ur/AJqIrFmr6FYjSRpQp44bmZI9EPGNxQtK0Uu7xDOwqsX0DEqb9jfjuMn+uOteJobMEo7MSxBU
                5Cwe05g2s/h3LwmI3YLfSVyoyYB0xGN8LFYeIq4HqdNVRuPFkDboNTEN/hjFYxCXYmFDeZ10Fmsxvmvw
                ahmNaNDidHoqhb0uOsXbV6aIp2VAs0VBHDZph4mIy00YJTeJdRKDoYuEqXcttMblbgJrdFxGq3DRPRWJ
                RFurQOmJv7ic+wxvEI5UAt/3TeSGbUTSwjnS85ipSxMg253AbEDSr+8TUG0KDSm5lJMo93mJjoSuvmBQ
                otME65g4cpJSFiZ1HaIWPy6mV0nHPwZhdVwgL8upjd2DRnz1LuhkxsbrrU6baq/LqOpftbFSiLeYQVQF
                ZsvDdQp4cWBfbaUGYRo6rO3+zdT7xNhKY9P+zdKvH9r78rnSy50T+QT+MylAdoz+U/qfx/qlsHCElGlB
                Qd/3Ap7/AH4feKZZtPqf57s+YFY9WVVWDBXGcyxApIiLubl7TxWnA56y7gFcGfPUrvQwYHDmLzR1DAvs
                jnMNYDNXyxTZg2D3d4rXoENB/OswbTsfl1O5WY/LqWNxNKfTMVQsfZOrnU1dEsGrZasW2MMrvPZmkImY
                PeVKFIc8mdQUXCuxFnMb2kZ4Mx0sKg2WsZjg4OtNKzOcR4+C+u4A60ofY7lLoLTILJWgnQfkllYjVh5n
                Mm9j8u4LsQxGD7xd6UNYO2ePxHYAprt1zG/SwYC1M+3rFgFqCwxwveLKQwnsM7ioBH3e/wD8BwsniurJ
                pTelZrbDFu1T0LSeWVtcYLrncuOonuqDJL8LDiCq9PmUnCHJSusMQiR1vG8S9dQJe0aUAQYPy5pfpmJr
                FdawfDeZuxUdsPovUC7uQY11l5IfY+ssJm+KiwmvfAqisUqreBwRqjITgoy75CYIrKzYau4RUXpu35xF
                h6Vo10ev+yhf53L/ADpEa3TD6H87TuvCd14TuvCd54TvPCd74TvfCdz4Tu/Cd/4Tv/Cd/wCE7jwnceE7
                jwneeE77wnfeE+EfuDlcS1BRw/Ph/OsRmwse3+Z6MHXO+9zVLfdTi+kuCYLpeg3NjdwOywHrmU/L5ML7
                ZetTtYHweuYEyo6ydyr1g5gEC0+XEfC7N2nI3uBbbGQDke8317qPKeMODylAataauC01o0nvjfWA0pmH
                HGLlQiz+G4mJwMUZGxu/aDqkeP1XWO/dmgDjcYFVh49xXhH87MwQ2m2hq88xMIxdvy9ZTyQOQ8oskW8/
                LmKShjtqddwA0FWnDkXll4DkB+yCEl0cabsXlhEZiHie6EZgdmmsPaBzpYJfd5gH07ftXznURpi32yea
                j0JOmdd7/wDF6DEUfYevdywNeX9fpBA7c7Z8iz5FnzLPmWfKs+VZ8qz5xnyjPlGfOM+cZ8gz5JnzTPmm
                fJM+SZ8+ynoMkNFYfpmWC/YeP/AXLJSUlf8ABBS9+d+dydydz6TvPid98Tuvid18Tvvid58TuPidx8Tv
                Pid58Tuvid18TvvE77xO48TuPE7zxO88TuvE7rxO+8TvvE7jxO4juP8ASQghHOEJSjGc4QhExGNOJ0eh
                13xLK9978R6ArMoDE2L/AKqCtefWG09JQo0rNs3/AFKHWtd25stgBZYGV9an9KqN2yHSGga64IWt0lbC
                rvy2bg7JzOAgISt74sPJ4Huh56s12cMxQkzRwf8AToQlOMZyhCE5xCIQ7iO4jvvE77xO68TuvE7zxO88
                TuPE7jxO88TvvE7rxO6+J33xO8+J3HxO4+J3HxO++J33xO6+J3XxO8+J3vpO5O5O/O/O7/e8FWUlJZL/
                AMFSmUynpKekp6SnpKejLdGW6Mt0Z2GdhncTuJ3Hid54neeJ3nid54neeJ33id94nxk+Gnw0+Gnw0+Gn
                w0+GnwU+KnxU+KnxE+InxE+InxE+Bnws+Fnwv+VSnOd73rWtYs2F7JcfsPj+gcqLeWYscvtz+/b+qHX4
                wV8TT/PP9FGYhFjs2V79oqG9T86YERVLxTBpWIOC/iFcqMp+P6fUfuRf1/8AgOk3+rfVPW0fmUNyto75
                /P8Amta1re95zlKV8LPhZ8LPgZ8RPiJ8RPiJ8RPip8VPgp8FPhp8NPhp8NPhp8NPjJ33id94neeJ3nid
                54neeJ3nid54ncTuJ2GdhlujLdGW6Mp6Mp6SnpKekp6SnpKZX/g3fc/vKO+fh/RKTTkRwnOT7xeNHw/p
                RHe72QZs/ogK5s9WMm/QAm31fifRfs/0ZvYrB1rD9/zN3q/H9j/5DpP5Lqi8j7MdL2v/AABctlvWW6zu
                TvTvM7yd1O6ndTvp3s7mdzO5/t7ED5CfMT5qfLT5afLT5qfMT5mfIz5WfOz5+fJz5OfJz5ufOz5WfKz5
                GfMT5ifJT5afPT56fNT5CfIT5yfOT5SfLT5qfNT5KfLz5eLtNGBfRH9I11p9o3r/AAzKoZ8T+feNesLT
                sfH3gAmgfsz+H6P6Gd0j7RwPQe4TZ6vxPov2f6JuQbmgzE9gPxN3q/H9l/5DpP5Lqgv137McmkBOJfOz
                5efJT5qfNT5KfKT5yfOT5ifIT5CfPT56fPT5afJT5ifMT5WfKz52fPz5ufJz5OfPz52fOz5WfIz5mfNT
                5afLT5afPT5ifIT5D+xMzu53M7md7O/ndTup3U7yd5neZ3JbrLdZbLf7K/opKykp3le87jO8zvM7jO+z
                vx3Y78d3/KCAjV3Vkz/lE+SJ8sT54nyxPnifNE+TJ8yT5E/U+RP1PnT9T5U/U+VP1PnT9T5A/U+YP1Pm
                D9T5I/U+aP1Pnj9T5Y/U+eP1Plz9T5M/U+bP1Pkz9T5s/U+ZP1PlT9T5w/U+cP1CUjRxi72/cv8AEC0D
                mCg6fchyOWfSJlh+SUrQ9zn9T+B2Z9V9r+job9BCtOMencjo+coymXFF1imAslLYe7EQsxwejvAAaJt9
                X4/sr/AdJ/BdUvXWfx+YzCZ72f8AE+UP1PnD9T5Q/U+VP1PmT9T5M/U+bP1Pmz9T5c/U+fP1Pnj9T5Y/
                U+eP1Pkj9T5A/U+YP1PkD9T5w/U+dP1PlT9T50/U+dP1PkT9T5knyZPkifPE+WJ88T54nyxP5R/lo5Vd
                XZCI7sd+O7Hdjvs7jO8zvM7jO8yveU7ysp/RX/38A4n21+ZhVs+Kf1KKnWZhStsy4b+IwJOq4hhT3XSD
                AtvL1ZpjmAhRUNXeop0M/qIiGAWzEghvG+2Jfou39n9FBq1WYDwVBC9ACFen9FfNSxTRBXB6FtuFWRBT
                q/lQbWqycK+f/BCicjJti8eZdog7OVeYYakA+kvHtHezdHoX9iZAluD/AA4imKZRSmw/nEFSUfrhc+Ja
                kp/TA48wu7Lb4pcsLx3IDiDBSrBzm71VS8pFSWaXsltsclbPoQAFnIawfMoyuGoo9uYIqW6m+RA3op0O
                z1idJbpwVWPrADblF7KW+WoekZQp77e0UBtgH3bhpLWVxhc+INW1v4v09Y7FSnQ3f6lGCk7k7+55gPUY
                LlQQwtjbdTOioU8qiY4aqDNgHyyp7KtoB8x3rgIvKl6QSxZeuYlglnOpxGHXNCsP3MP4PCr+d47ThDMA
                N9Lb5lwjrpV0ut8MzK75hf6fENhBrsP5cDFdl4fv/S61uHrxB9fV9GDG4Lj+IwPQen9G/AxXbfWP5DK9
                M9I+Onx0X2n1jufGBaL0j4KfAS7nPdeM7rxnceM7jxheoQap/m5c7MbrnH2zLUM/RP4/6YK6shsoceZX
                LF/QKHPmAs0pjti8ezGYzEM8C5mCbS+RfiJdplHcD+cREJ9pLnxAKqxFwXjzKvmG+CrlqtYgVaOPmUzS
                7h63eqqVgqQLPUEf2wvCsP2LlL5J5rCaVwSoo9tsNLPVK0+55g209B2esa6K28Cqx9EDMNgvZS3y1C1t
                DHk5gg9BqPu3K3LfrWC58QYFrI6j8JGmqh0G4DRXTvJ/OTHeUoNy7H4gqA47EvNqgp5dTo8pTOAPllAL
                J30Ax+Ytl7SLoaXpKRXq+f4ML4JZ5lMVBHyupWH7hWUXefzhx2il38VAb6W3zAaXbBVhevaYvTik2X9n
                xBISTOB/LgCt0R2f4PW8zNS/pM11U2Wocd5aBrL28O3vFF8RslLnPdl+hc1F257RoMiRomB7yq1cY0uf
                dl0DrGlT7kAMRGcMEo57DO0bfFGZaq2wlvtT2JglVmy7WvD2g6IHRlov2lAs0bgV9L7dYnNmCV0Murha
                fZDAW9KmdI6jrS8+llS6mSqVXTe2vpMiuoi1LeR8xHKSqu2+XeF3kBdKyHmptazlYoy+EyortP8A24mG
                gu9rfeXCC10sDHbEoKBZu7t/ETKbYfVKaf0KLMVrGVAIntiVOaXUH9IMXvZgUn5AhxuV7FH5i7FB5QA5
                3R9YejIABX0vszNKFwAP0/CG5BHrUx9afaZlEk0ufZuXqjgo5D3w+sUTouJVSvvM/wCVhso/X+ncav4O
                /rN9Kt0r+PtPln6nzz9T5p+p8m/U+TfqfJv1Pm36nzb9T5t+p8u/U+XfqfPv1Pn36nyT9T5J+p80/U+a
                fqfJf1PlP6j09VEvvFIXVYOrX0+81OB/pn2Cu2Jf0jQc7llqHHpHIOJe3Sbe8YQyNyDOe8vYdV9rz2uG
                hhY0TF95ZB6sGlz7sGKKcrRAfaYCTacKRreqBzRt8Yj2VtxLfansE76TVm2zwg2wJMcpxv2mz2Iv4Pp1
                iK0okroZdXBs8RxDDwi2nDdSbS/TFQzNJSqqqt7a+kpFDlayN+6MyNRREbb2Y3dKuxWQ814hCLW2LW/o
                hram6eQe+al50MvZH7x07g6V9n5QBrAW7u38RsN6x9ZTa+jQ5h4dVqAinthgWkDzEr8S9nllHIn5Ag/t
                vsFflLbQDkMHO6+8aVmPjKvpfZ5gHvv4AEfbMo3I9xSg8t+0Q5QRrk403iMYOHjorw+sCptvwtAr6sX3
                wBs/vcmDKrgjjBF4U11qAigWidbqvMt23cmbNkHq7U7Tdwy1rIxgdIhwVuNxFmRxUNEbaix6jbSo8ce1
                6vpEbx2wWkdsQt6xcdYiTllaHWPd79/VBq43nHunCcbJSALovlmvv4V9ImJHufROsK6BW4I3risvtApU
                5JxLOq77r1m0LRcyz4Hh1gzO4nUFBSvoY7zCiBu4hnXOYf8Adxb91yhOeO/sxnCkwn+mHORg7f8AZmnH
                juv1+v8AdXDH+B6QbwNjrHKFZDuzjr0G/ZA8vskD45LLPLE5qNeCiO0E9LZvjr6RgMUh0zUYK18PT1mL
                RZo7vT1i46OziusaDwpyEQQeve4jaO2IhX8ls/0s5po8X0vrNLV0dHWBGKXw5rcH2jY/KDhKL7HbrLdV
                bR3nNAE3CUihSs46+neajhl3EUUVl81E+KUHJcVSGxck3jNUdf3n9uh57XUuVWtHFl+Wp0hJiGiUUyUV
                ZuN1BmDZ55uLu67mseqV/i7n2MZUqsLq7T9PtC43sB9ztqX5Rk+h/G9TqOPXtj4PowgApZzsfq+say1J
                Bvu1xGiAhdDn8PE4i/FXYsfQPrFa9EKl4hjLK0fSZfgmPAqr6XLrMx8bp71fmZwXngA16l/WBtP+qWTr
                Y9i6H0mpxcJVAUvq4jvngnbtf294lagy15x0A/lTjz6/p39DPaoWI4BaXl8yvbqRp/MEb9W4tb9jjqVf
                P5ljAK+lr/c3K4cno5PaCM4mn3/0nwuVde0zdhTHP6E1cDL1ev8AugQ7GC4fSql7hibA4PFSxdRmS+UQ
                HVWBazi5cujL0nLNynO5usH6z7IjvSU66Q9Qup0Z/AxrNp+8gb3zAJwXhXqu3CoV+1/i6n3Jxl6MNDyH
                VZ8ROEmnmufuY9pHIZyK9OvtOs59e0fD6Qr7ZEDDZ0pA94ltMPXWIxFmfoz1uNegtDulfzMXuaRzNkKz
                3H/hcYckW6G30q4jQemAJTY1Uc26XVFeb45ZWNblsFRV9e/HvDJx8Di+uKiJ1H8jcUQwcJtfXo2+JnVD
                w1W8vv7/AOAxCHYG4PQDsTk06EpEwuyoagKKwQEgQ7Kn0uViLhINFRW0Pci4UKaa1OAcLqcA4XUou6zM
                yinZUpQOgJd4Cx/QGAR4ZVT6ViYmEaK1OiPSLTHWMTAFKNFQsUBeWojYXqE/EjctaV7olCFziosA0aFa
                gRJ0U1/vYCnfUQRqtWeP+Ra61/oDpfgIa3zL07+s4JGB/wB6FJaFNRUJhzUVCpNKRIVJqyZl7jG4qFZN
                Y1OPd1Zg4ALtCYExLaVuBEEO6JTX6ViL3h6KxKEqsSjGDGp9krM4JwuouoDk0b/p9orMBo7yplvXAoCX
                IRVXNkNzy165n1PCKgLBorUbAXqkXCFOaleB3VEgS2BKwh0D+91Fadg7/XvER4IVY89+8DsRjddAeYHM
                KraVxSeXxNRHNg2RdbclNmDp+EoYCbsFG/rHLG56JSe+44ygy6LD9UAAc0WCvT0jBEVO1ZG68fWE161O
                eU/PtMu3qI/oa9ohwwRrJc+1RAF0sFKPtTGMMfvs+9vMMraj16+Mwj33IaHtSDvFwvbS+5nM/MqQsW94
                5ya90yHvTzOYdPt9NcVZd48hR7fZL4Yxvb5CvqgShsWjK1K9ac1NgQoMM1Sv2a9opRDC89D6pkrTMtrx
                qH2I4OTfpVQAcS86FTzG4xU5N26d6itJy4oeDiNgZJlgDf0RcrtG1hdHaYTOlnrbXepY0V2KzVXz6kOY
                DKu1L/JHPUoXOsIdbWJvLgaqsahQVNZHPHt1liRFy8HaFDt4hW3ziJWLPRUYPtMk4Ht6IFLydBrzuFlG
                IrqNX246SmIj1D/NjqP1uzKSVez2Za9dr/MoRo7dEpMPJ/LChqn8k/53spYtABv1b3F0snCrhQmkx9WP
                QYJBZDvdu0Ay6XwN/dLvdY8ADVgw9svkqjn3l9l3rjTPpbABVS5HaH3MRmHBq/fdTYwObY3x94MJnTax
                c/T+Ll8rBG82l8SrXYwfqlkB8OJQ15juoXh0BJ9HmGGtA9SnsWxV0lLeCeAyqF3VfUS2iXQl76NrRW30
                CDj72mSWYL69fGYRbT3Gh7UnJUS8C+58xtDQIteIv13iHCF+THvFooMHAX9wEsiDM5Pw3KjNbC9412lr
                hBmfolm5XeLfFivu+IbUBrdrVPtG3XF6m1VDA5AtaprMWty2/Z94LYfnb7DefpALJSX5pR9Y6wqwuKHx
                iD8lvY8TELFjoVj6xvdwVUnd7b5nPVhvbFN1udgz9TESsqImACa+sa0WWHI11lNH2BoOGccQ9h8Ls6m3
                +9JYYSFQavqCLQnfBk+8edXBXvLN2P8AqIoyCEDkVUsDz6ILMX7Wv1H3CJlX4paTQtWaagnfudxUDKnW
                Zwr7RAqO2nK3f3ifKWjVrZDuRIDGwn2jtD2ARpf5xOIfEwq4E3C4OSoVVdXT2XRMyshMpLDCElzZp9qm
                jT/02UCVNA5t35jZwuLVlsjewdjQxX2YF8CmHZuUecbYOFRoG3d+P1YOW6s+x8vmPNtJ72ErZRUkdhpT
                rHG07jhxX2ipTbsA9YAXQapwb9MRXALXPmqz12x3LksMav6Ed62YX0RxYVMnuzzKqgDP3PrM9m/PpfB4
                ip0jQZY14hYX3SUr7Ez/AF5O/VXWB8wBerupfCAyuhxFOphljGo8+EBWhx9WAyAKA4/z2jU/4Mu6rr07
                dpUaXjj/AJLq1/iQAVeCOl9Ocs+/SAGboj7Sk6yma7vf/QUC0G/qiqu0s5p3HJBRYgTVOYeGkHRjX3YG
                7iwOD0IMkDgjLb9/6aNWzk6I0Fhs69MZ4oBoGhi3bYdKav7ELkurDiLmFi2ktrEMJeXfYJt5jv01LDCE
                25pp+kwQEH5pKyK7WM535maCYuQjXQBNE0MdoewAaX+cTiHxMKuBNwuDkqGC8m+0QctXu+ruFg0uJiIh
                qJ8Pqx5AkD4wYt1ZN/wso4AhdY09I8q0CveO0Bav2TUetpr+Gin1PtKsNrLsdoSy5nOf4Li3MqB3QDfg
                8QqIUb3NesuP52p0W9dzPx633QHKmT6iZcl6U2Kyb0qS4U6J0mzkFyst7iscW9DLymN3bHhEgW1ZSUHy
                cuuj+/OKtYLmYXraVy8Rwm8jRreZSepC5uc3iFLB1ZxGr0EM2o/EeLMNYq7PmVcaIawXZfEGHoNaUOr7
                1OjWK8mfVo8yrYU09YY9bID1iFXzTXiJ1aYJvS14PrFYNhS9p+5bukDzgcPoJecvEbSYCtfms4rE+nuG
                JBCw1NzHxYpS4tB+nEFg/eoMgRQcI/qKVcavo0XwkDH4lSFhX1lAttctlUg6THy8nn6kHBbgNqzVHq2Y
                jNHCdlIkoq89oApy7QoK3uKA5GDXgrIWRUV7wfCoIvhdeJk83lltf2ZZptTW6xN+MCyyVjcXzbTfS4dA
                wTJdfpGO1FtbWfQqXC4aFJZZ/sUicXU9Ii6dH3HMrVO9WSkI7XZOifXOIqCPf+3avulE1F0P2iwPqH7m
                PHccf9S1HrbPbp/sDqBbUxEqrQZdEF5ygwxupXdt4Xbg3LXh53sdM2cUxm1DRQpOvLxLwwhRV14c6mDy
                TrS3hL7X7weWRoc1lO2fEQ04RX1frxB5K0php/TDqgJovmg+85rqxzTV1B9kvPe+88XZlYf5xLN/dpbT
                XOPiNX7XBeYUqubXNXL1oQp7sQdmGSbB/MGMDwspB+Y/jGDYFnqS4zFh0vNy9FWEmbtOUW4sYYeJnDmH
                l2+zBudDQDr00xWwJSUjV/mVxrNi8O+fpBL7NUwGy/ZmfNbSjCG0ZYYUaLu9JlHIcvbM3rbi5I5XVKws
                2fSJ8Uq5PWnpGhY3HO/tUv6md1eNPXctg3Usq1p+n94JSlucGcRSATh1/h8zPCV6R4fSbRwdEG7sB5uD
                sYU5wr+Y/vCbowMwi2GCrFX5cv0mWGjgAFc5vcL19iBpSRkEVX1bb9Qlw/MdA2+Y1LC6pss9mozNtAvF
                P/I0WVnRBIpr8Fym72AjhLOSle+YNYUwV5/eXXNkOt0lQq5R1XR+4heKHfNXj6wiwesq4hs7SChioKlY
                IwyNHjcDX1Wqxp4gmRdbyu38cxW0FjO6eAI9DeSqrjk+Qxa+sI5tWBMn2iPeK51WOXaWy9WXCrUPMIWN
                pyNUXwpBVrKfzLbVhpz0qdErBfZCW7f+6A0P5CLz/OspHDksIf7Vs0ekhF6MsMKoOfyEDU/0j+JHiWf8
                Rx298/XxF69fYVFb9T/glGjqaeIFFGv9nAiCxeIf6UBB9aZxzZcC7L6TlOCli1i27gVBy2ecsFq6HHTK
                B8E2g7I58S7SZG3qOZlrg/odJfU8b/iirCStWt/8gi0bvXW/aIR6Mr0VcAN+W41Vy8yPbhxVym6EcEYe
                zAA2FnRUDXQ3sxi/zFCvQYWPYBq0AHnErwVt9g/iIiiVvFI/iY6KDgD7uY7gAcWgK8xTTZ0cj7kta7C5
                P3DaMIXiyg81KQBYFSFfiIaitXGA/EBCqX3UPmY2V+2F+koHVsIZX5ZQLBrgAK+kWvYlwKMfSUvwMdi0
                d8xNlMILK5iGAADuM/eeritmg9v1LtxsC0Lm/f8AwOCi3LdY6wqUyEnsy1mggZo34gOAOUudcQwdSwg9
                /wCgAIdI3/17RDdDLnZ/cF1kgYsF/H9Q3ltRQDCijL/OZrpuEjf2fH/w9vHVNzpb0/dPmM2y9Sn3qW+8
                BoAdD/4zDUdOZqhajxfrLiFmuHS6zG2xVdIs470MVeyL7E5qszEAIeT3w94tFuo1TXZuPQPD/QxXMQdE
                9Wr1UAXrSLLB3CVEMZXKfIatitDe8UIDqTKxvq9VVRLrS53XOokgzR5Sl6Yt3BgBTZeokFeaGKrONFu5
                3vVW0/KbUFZUbbxOsHqxLECdSNU10aTGRpbaMtbjVuRabHA48/3jIDQ/VKgxsRU2cXiJ1az2NWX0HMYU
                vi0P3GZjsrRlaHV0lm2xp6Zfej3lFQCcpjIiOwtgszcbFKHYvHrX1RFfDaq7Oz7sTVK4a+nyzDMEgmwB
                F23jmHrFx24N9MuIgyVaWyVleuLZYUpFPGBTusxE6hoQE2OuIoRg341XEOG7krhB71KBkKrhbWpYaeTn
                LPrM/b0pBSr50fSUthh2K3l4MO3YXXanKyvLuC4a3qNX1Fe6+rWovHhoCGnXO5rtbHKlquIpgH3Ft9nR
                mSp8MPR1KPMC4EoKKhb66uYRXA5qHyuoMAWqW7JFw7xNjkqdPSVPp6nOTD1rPhv/AMdbY6ogXjSd4lq9
                Vj0O6ZcWDiWsUPr9I+aL6yqR9pcLuRNVb2VcQ1N6/dg+kBMbkIOO0uLJkR1Z6ahSvYdbBx3Jw2MOi/x2
                gULrlYW3dqBaZUhao47YiYEUd4yEoZIZaAoC+pgqKn5NpVYr1mSHxIvhZNOv9pVDLZcCSzCvI13t5gnD
                7vpYVxZb4iESiTqu3NInvAW6dz6gTuV4g6n9lBdqtbM9oq46hpm315iqGrfsrvygFbLIC91NzAlyrlu2
                uucVz7wyrqsDFCes3a5TK7TXpFHgVmLpXqxEuogtLUfvf+Crm400mRWBABacv9AL3GULrUxbJws+xEgC
                XejMqzq2PSEtTipjBN0vEurXW5ry+mArVA8sS225V6d+0pj6kAZ2OXslHqk5Q5vjrW6i8AojpjVgLV4l
                iPOwlJLqsyOxKUiaa4ZlaHJjsmeSIVccKrVwgCFcGW25aB0LioigYLdb1BG3HeZiZbev+Yj2QNKpiNFh
                fodXoTTBpP8A4nMtkLfSA20k/s4rl5dL6y8KiLCglMo2XpHP1iC0yhX6ssq7x1jqbcGAxaqnFwysI11b
                umF7sAuZV4rcgtbevSOzBtYLWN/D3dIqNlY9SUd86AWsMmBYnMyhGrYdQrU4qYwTdLiX2atzTf1MRIrM
                csQHRDcRCDmcqpUvsfziGHWYYp+KB6cTbTwP94Ex9VsMbgzLzQcO3G6hcFThq6YrllKN0bb9vvDLhKrE
                Y+mfedUmlC092/aJoow9oHh6zW0+sp7ej0gbVG4KFj64iqofTaF39ZsGSNlVMgoOBYnObxHlROwrdvYk
                1MeFK+6K0i63gHf0qOtSx06DPO5phZsgsM9gJUT5BT+jbQXkvqfeF4mSUCoNo6ekbV24mOxWLwjBHBEb
                a5cufaYPF0TPWOMwz7sOhQRy2JQpR6F3QH1itS8DBb7QUCh7c2fVIQC9ByvSPUatSrq1vRf2ldFXrnoX
                xXtBsB2KbL639InGx0jo/kmuvCuW9tav6wUdS1HKgqxuF0bRusM/+GYejKZthrsSoYuAi/h9O0a1Lvht
                K8stWs54I15SAkBto0p5t8RpqmQNoNXXW5ePQCMtP6I7fWWByzWy/wATDLcM86/Jx7xlP4pR9lKFrSDI
                Tf0r3jaEFdN9+jU7LZ9XL9Ie/wBzdCD9SwEF4LztfT/sVJU07LQTTulYTkpSgN4yhj7o6kxjlkxY711m
                SrX6hiuMrha8i4I1hXiVSBKmxUt/HtCAULp7wSVyuzCxhKxUTajf1jHnJGyqmQ0EYWJzm8R5MRuK6vYx
                NQ82p93mIFGCdBz9P5Uc6UEYOWs8w5i1HYM9jMHqDa6/KDqDesq77N/eYxob5WG09Zo5sjLNVSu9e8GE
                aA5O67Ffyv76ECdGJCQaE1G5aW22QJsAvNRFi7u9ootZ6pPK3rmUAw9LcFMJks1OH4aMVLM5NqaI2acI
                WMWKHA9Ib+rXsb/MQvWyr5iasF2NMr8eZgAGVlLpiqOAVg/pdJDkpzC5emrjz1huGhekBq06EainNYii
                /t4lWPQCdUO0Yb3Aye+HVpX79oOBWlNPM7ATgeIuANDhEJFFI6SdmPioYEGgIqEE6XiIXrir5/8ADfZ4
                zAbrK27uszLsbccypLA2MSr2rHH1f0Urtc+51lLULds97+GYZ3KeuH7zMyRaLlowJRTNRUgNPqYeGBSZ
                ZbuOW0qgq9pmfQY/VKQL2Jk5ne6AoG+HlKUWPEUvxKwxUXSaSAw6dJS4TJZqL4+GjFSzuTamjEbBakLG
                LBDgekFrpexv8xm0bGs2bFlmmfb8zAAYaAumLl0dUx/RRBOytzshJj/Z/9oADAMBAAIAAwAAABDzzzzz
                zzzzzzzzzzzzzzzzzzzzzzzzzzzzVOQmOlPXzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzgTAyiTRQ
                ACCRSRjyjQxhBzzzzzzzyhkFZwMND7fzzzxjTBBxBiAwzCDjByhiQwBhiwRzzzzzzwhgwzBAhwDiwAxA
                hjSBBxhDzzzzzy9wEK43VkEOnzzzzzzjAijAjhTjARzRiQTwBwhzzzzzzzzzzzzzzzBCCwSAwAgjzzzz
                zzzzzzzxaIcsP+IcgBvvzzzzzyyRwBwwxRAywwAwzDxzzzzzzzzjXP8A260w91426+z5148z7360w915
                2yqcoRg7RJj2VOL6271x8043z/240x9362y9150y+373w89+9+vMPMd+9+PMPM9+8/ONOd8/8vuNaBVI
                IUEeFcBW6+tuNMPd/wD/AD+y0435/wA/ctONOe9+98PMIZ67aLIJp476qpIJYa76745oILKLKIcnUTHW
                WFxlB/vZ47767ohJILOv+4pMLGDW010JCH301A8884804844ww8ww4ww840w88888888p0/dYOQuN6sK
                S888888888w040488ww040w404080w8884UA48EQkc8wIUAAYss8s8888888888m6RiQhDhQijc88888
                88888MscYQEQwoscUMckcUgU888ssMoEswQkcwEwIgcc8888888888888PDBBBBBBBHQ988888888888
                88occ8IkockY4IokMQ8888MQ44MYwAgEIg4IEEY0oEkMI0888888uNDBBBBHYd888888sUoMUcwsMUYA
                0Mok8UEoIkQc888oYkI8gw0M48s8g0EEAgIU88888888888tZFLJYQf88888888888YQEEMcYMUc0s84
                MsIsIs8884EIQQwwg4o44400w408888888888888888tcN88888888888888888888UcAwE0EQAsk8Ic
                8884IMAMIggc0M8wMQowsc8888888888888888888888888888888888w0Y4YckE8QUUMkAMcA88888g
                c8cgA8Ag88AcccAc8888888888888888888888888888888888g8gc8cccgAAg8Acg8g88//xAArEQAC
                AgAFAwEJAQEAAAAAAAAAARFhITFRkaFBcfCBECBQYLHB0eHxMHD/2gAIAQMBAT8Q+Aq5cgQS1vwM4GsE
                Ppvuxa5dmN/Q/IlRFeaE01K+QlEXL9Pux9L7/RdiQEiiwN1+0jOqcJU4xqSDhS4oyVBrjQxUdHr+B0Af
                IGNLFvBKzFic5pXsYySzY+HEZ4shjTHLRpPVNdV0aI9J5CSzerGEglv7F9+JC6TyaWJzivj6niywq2GG
                adM/gMTJJUyHwSNE0QEGmJ5kyW5rs5LezLezJEch4Mk7Ozt0+AySiBDUsLi4tLS8vLEUCoVisUihuVNy
                puUdynuV9yvuUdyjuUdyvuVtxRmlvuMOjN516eUO7o6exQ6JX/CT0fYgFU76kyX26ie8xJxLyjO5tegq
                5fh6CMTEpp+d0UtytuVdyjuUdyruV9yvuU9yjuVNypuUikVisUCgWIvLy0sLi4sIakole2CPcPed5DUh
                qQ1I6kdSOpAREBEQERD+DyI8CPKjwo8qPCjyo8KPKv2eFfsjSUUYVXokPUn0O6TA75Pg2SIllYjhFKWI
                qGPUmJa4T6Gb6+zK9Bcum8fk8K/Z5V+zwr9nlR4UeVHhR5UeFHkR4ER/ggIiAiICOpDUjqQ1I6kNSOp3
                Hf7ij2wyGQ/8AP6wsLS/kv5LuSzks5LeS/ku5LuS7kt5LeS3ku5LuS7ka24KxZmuqRpMkk+x1ERHrr9h
                mw9X9EPnSEFUs5lCIXCM+iEB05cGZ6+zK9Bk0s3g4L+S7ku5LuS3kt5LeS7ku5L+S3kt5LOSzku5L+S/
                ktLCz370IZDIfwG+ETmxUQtUSYo7GNW+h4mUt1zHpqK0ySJpn9BZL71gx5b7MXhx2PCZmYktcBouUx/D
                6/H38w3udUNm0SqLVsWrYvWxctixbFiLkdswkauxpS8F2X5+PqFh4iFRWKyaPX/BYRLYklMWbRaCEhfI
                HqLLo0LngdT/AGI0Q/dhh+CfsOhdhcCz6vX5CcdCdVmMKGmqwDbEfRCX7s+w2JktmyGsE+ZLI0QvkVpg
                aG7o2MmTb/nP/8QAKxEAAgEDAgMIAwEBAAAAAAAAAAERITFhUZFBcfEQIFBggaGx0TDB8HDh/9oACAEC
                AQE/EPAUXCpisd5Q/khJeIrovnkORMr2Vp9iEhDGXsc2QNSoJp2GjqNaGJpqV5ATMyfCuH32NpKWQATo
                xMEcU/X/AKWpxN39chlbRy+xqRzQ/IEaluPJCTRJuYG40oabiqEk+cP5EkKFsRpXsUIGYyDK6fgQQQyG
                QyRLQwGIxGIwGEwmMxmMwMyDIMwzjOM4yjKMzYzNjM2MzYfmaEVZSmXZorjnFeepgF5rwKCsRLJVEKex
                R8QQkLQJuMydjM2MzYzNjI2MoyjOM4zjIMgyDAzGYzGYTCYDEYjEYCWhIhkMjuT3W5TlOQnoS0JaE9CW
                hLQnoS0J6E9CQmJiQmJiXUT6iXUS6ifUNZSkqV6z8slxg3O7/RoHcbLO7vzbfQdTuxpqQuxKfGtSYuIb
                o7GuPSvCH7n9GT6iXUT6ifUSExMSExISE9CWhLQnoS0J6E9CWhPQ5TkOU5O6k96CCGQyGQyGQyRIkSJE
                vygVVVwqlppPyyN4qv3bFjbVP9Lcb2vkZrkPFCFhWTda0ErptjdPY4qdY/f5mqqoCRIkSJEMhkMhkMhk
                MgjwNJTRUZcn0ZYJpch6Yq5uhTatcvsTUNHsUopehTFPoYxPx/oSv6hFFZiS5fHj6u5aj5cH6Mw/f7Mf
                3+zB9zH9zCMQwO3ZUStbIpfj7WG6dqtOa/AhJY+Vbh9ip5AjjuMuDw4PXRiaald1NLEuWFp9/QhIXkJJ
                CDeYMXWxYrfJ/pklfYJrnrQWlTd/QzlV6u4klReRYkxEFw/zn//EACwQAQEAAgEDAwMFAAMBAQEAAAER
                ACExQVFhcYGRoeHxELHB0fAgMEBgUHD/2gAIAQEAAT8Q/wDhB7FRA9VxYBezb6v4HFAOAQj1/gGO7zQk
                PqmPR1yi/en6KfmvJ/JhLUHA98OsNzkFL9x+XCXBynzGk+uSHHJu9Rye/wD/AAcywKpgGXCLuLx1+g8u
                MWDRzDwQPee+S7ckTb6HvvAkB0JdehJi+n7A/bvFiZ6q/nFmrvqxWr+QyBZOkX7sdDrlL8hT6YF53bf8
                czGoB/ALp+mEeAke9HA9J75x52Xh7JyPh/8AimEPYkCRE2NzkwFewGLpyB03kd2o1nBsAiXnWy4CLikB
                KKJV2QSYtm52yIeYrx6Yp7H5l5FooIto2ERvhHgEqheWsoQkNrBSOaqL547nS1LJFnGnQcbZkAYKRqAX
                KgTqyB8JKXQs+swsayg8gqYDli9jGNA85EgTc9soITqgoKblVr64CfhcFka5qOoHm6wCDh4EpBzaml4v
                XFBKCtgIHcVnTDPQNngjliOwyd4wkYLOatqHpjiHAPsY700ianO8Sj1qxqa1yHq47gFsGuF6BXgNec5y
                ribXRqHq4wElVlNXXw61hP39/sj10E98o9Jto6e8tkwOpyND3s9OnX1w9YckgWgTl3MfERSEqnJ0G+/b
                NGUXDZBeYnpeHAwEDEep5dN933xgUlYi3JUANHHnDSOCaxZTClH5wrrVN6I0nIjgCK7NEpwtUQJ18bg6
                Etm1a05dXjJAMaPrxHWqF+mFgV4o0GNnfQNecuwzQgDYQTSa45xZ0XpRoEG/dwYxreitkTp3wYmmAUfr
                /wCERmkHK9h1cTC27gO/UfH5wijlKD7XR55554x9FertPPJ/bxiq1a/oa7zSeD1zk1VqvHri0iVwb4jA
                wJIITlEi+zvEO/Du9ZP2v6laDfkL+RvF4sjIX6b4friy77hSdux5/ZchsvI58rqft/1g5N3SWmxcfqUo
                I7F4FY71oy2FLJAO0pNeHV7bA+BJBwwMo3dwDvNkILmdg2/Tpl5Je6C6DR5VKIATYvvIUItF6PXGGMYi
                PhhdN8897DzMJOS8Abd7Tvj7wx0tpBKCaVMu5JuPA8Q1rfrj3FigDbRxXa3xhxEgZAvYXqzWluwwZzL5
                BwiUFIvbEUoWaiWgDphefGBxWKLlhxQHV985QY0IUEIopF7ec4Nd6g37wpJG3D3zhbSTf7sU89HuZ1ip
                4GjNltLKFYH9UyYMLTUAJFCrsNedLIwK0+5HM89cN+x8H1UY+Lee+FuwJxE7dGBTntjrZVvcffxvzxhl
                QsWxVCsL0zdCd6pLIREept7bUENBBaCFVR9nrgPlppbknvTfS5qvgkVQmrV+jnPANtiKG1myc3pj9A2A
                EToIs43jKfGhwARGpb7Y+DqAwCp1eom+nbB0RgCODW909L4xwDgLmlpzoU4zlQhwhAhFFIvbzjY+sEz1
                AcFC84yZits4dIUpvhMYZd/SO88fXKr/AJwbARpspfnEL0kmgdAhCutLzr4cRPrC7vPKdMsVTuxhoY0t
                jvKhxCuwWICxN62ZdVWaDrHO71r1yR1qCdUKel3Dw+Yvg0GnSyQA30O+v+2D4ioEjKJ9MOG1hlWooO7h
                qH1ZS0DZDdaJxrDmfRjQOGTtFu1cH+G9x0QsDip54wFhCylsREdR9T1x/EiiEhVTkelVmFUzQq3VPaHn
                waxmQmoaMm6ZqZUf18GivE0PM1YYqNJBJ0mgK6WecSjOTa6UBAaI3EQwXBaCcAEJ4Pl6bDDyiHWu785A
                ua666487GUcQAVrGiKFdHcwD7ohRTkRL0TOhLEyepevD85rs9NZacBRwYMcXrqAai3YgRXGs5Nk9qn1K
                49XQHCuwuuQOXNSCPEIJDWyC3dj0wZLMyip1S3ic4ruM6UsjetzD1cezggFgJ15OGYIT+vQceTqY4w0Y
                zgx0QCRir+AADr1t0U7++LCvZwEZRLHtkRT3TKw2HXXwxRfDKCBQal4NvpHJNhqetLlttV65OcSC3Bp0
                AsN8sYUZq2ytbHo7ec4psLm9pU7dVeca2bu0ar0l3x4ymd5lVmsd9QMbzCTXJ3Lehatx72FCBBzONxxb
                CLIIJIBk7rx/4Z4w0XoBipyhwfqvd+xjwimwXr/Iv13HxDUVX1/VIdaLB74PUsVDcBHtwY3PeCnGj3Ff
                bFAWGLpRy39Mu8ku7r8w98KurM0FacTfPac5qWFPid05D/hb69NR/wAa+O2b8g+ranTx09OLa7KAn1O5
                /j/p2sJgLwWmEn3lwAsl56dcBAkqogThQ40+W8KLudtUr5dfPGPkNB8kADRL1GfLvLGO8qU6WJYY9n4g
                YiVQfnCsb2BVHR243wYP4jHFjODFN3nEEEjpDiDxuuN6mGAnQw4A/a3xzgAM5JvOh6sS9daxItUsl4Nu
                6lK7xowolnQgLpQqwcOh9QLWEL72dJhTPCkDUAPCm1yMEQqrIgKxlXj5zcglMZGMING6x1ozSm/QdQpt
                no33y2KdMVtCtDZJeiaxROk/B2qp5AbzoBlAiKN65I+cDDdVegNrfOMjuQW9WLDtZ65qLh3a27dWCQt5
                3nKpyh5P73jjDcjlasQF56JxkUmFblUEDe5XcDzXniIifAhfVr5xuNrEHBuqA53rnOcG7N6sWHaz1zhK
                QoanAJruvGTOCtkTgblWb8ZquZashAlFtl6Y/gRtRyOkZXqvXK2MA0qmpWt56Y4NL4UzJvPSYkREKNZE
                BWKVePnAHnIk+BC+rXJnVIdsZxoee86ZflGB0Gyp8YFatJuFmL6lODJVAe+jZI9ZZ44z93L9x36946Sa
                yd/k5teodAsSq8XJWriDONhvaDHrrWG93IHA6p6TnLVuKp2X3teXeKjAPqYnQ8WeOP8AtscMyQBSJsbM
                YK7PcC7A9cZvfBJR5qiH8Y2rB8Oe9geux4wPMvror0bSEfKZwincINOg8ut4MoQ6GVliAHoPTmYESvkA
                RW7Lt9XLyKMqy2uhFGIYPEjiWEEb283o5y2dUBFcaYo3eKaB0LuHclur23vIhpOOs3r3q9t7xDlm6kZv
                zNOtdN4YQDDRF6/45D2FULs8fJrfXeLzu/kkA6TY9bjRjtVjSUQCq744y+nneBAcAnh98TqITzBR4SmC
                E5AiYbKYeJy1QNHeMeS705agsQoAtFwBeEyUmvAA7kXjX84DQKtKndBu6sNDcYOmvZAVxQXkJPOGDgJQ
                DrvSwR73pg7mhKaMpaUPxg/Mex++J1mQyhkLVOSuihpeNOUAMEKJXzs31horp6seUQHtfXD6UZIBTdla
                /udZRoJDcvNgeQk9sVGyogdxuJQgNvOJDT/sb8aRbeIzcyjxwBV2Ka6mmrZqZdJl+Ck+RTUe9uBqFlRw
                oQEVnoj2SzRjtKw3rrU17dVO1oHQrfXDFA4oOtOdjOMnpVNZDQSFIuBqTTRScEVp5/7j7KK7f3jZNzod
                k8ur/QZqoR9Yp37v82f8G4ET12dvtMGWwT2B7dZ845MYo34eo/S5O049mbTpzvE/gb6oOFEKWiTejr+2
                DNilIo8d7265TxpOw7f8CHcA1f4p1zYlTvLx5nU6ejoFwQPTuPD/AGdP+7YrKAjIs2VXsPfBGKgwl2B0
                HTtcOr6Y0KJNUL0wSRb47l6whaU5Om5mC4ISBpgFaXidc3PJ5rsBqRE0NfGIB42vyKQBTmhyYkgODS4P
                Pul79MVnZWE7p4zffCzu5gSY26pe6oaybdKq2Jfu/TBIswUBZJqTdOcG4idRvreETom8M0QzaMII5J1P
                TFXOJlDaYRWnnLDourKXxMu8TUEmslAUY9THP0KC6r2U3v6YGNb6DCOwd9TEdjiC9gpIdMYfF6AmnkGe
                52wp3lu0wkdWW5YO8wmhO9USdLd4JwtCE6I+wTzzrbvUUuo8vCPnGdJpjqQGk7hiL6gV/ieMmrWk2YSb
                yUvzjlwIVrIEDbV7M3kaTompAIndebmjB4NIKQiAOnW/GD21HU7g3dWhO66G0OLMBbAignTB+TE5WXvb
                wPXtl18WF6Mq/GEkBcocDGzvoGvOM508sB0tUbG8AlOrvOhxhV7HwDJTTpG7PJt16Y4C0itiywv/AIWG
                JqyEEIFp08BgrpjXQxcBS765fclNWGAA7+qvoHUsYWDBvRCRxwUHSJINKNRuSTsSZaShqqwMdpJUAPMo
                n0ySjtCSSh0Q3i9MApJKEpUCCjRPXDLWek9jyrZblLU31IGr12vbAKdTMyQBSLqyZtiDbSiKS6OiY31s
                mVanV5a1zmgnK/oH0ZBDZwKeWtdEune8BgdEpiOmaO/GFcIJ5qfA3aNyEQiAO5GyHZ0ZJMEbkIp0dE0c
                3I3mcAkAAIeLlMC0AECHOR15NrchIlNg1LF66Sb77wYXzuF6CIhDg9XGICo6Rvkoh2vpiLu5ZkCHAAIE
                +u8vpdfEICkIHTNAWlO1XaduvHjI+pR6h0s6zEpgiLxnkCFJoxYherYEm4FVGSvfErU9GPhRzdtxMjXn
                61aDCDePGDfz5KawNAeHVwILwTAhtBAutzEJ5sRDN+FHVA41JrAvvBYoIHuJgq6CkQ4BoeJxOtwU1Rui
                BslgOEw4m1Cjd8U51OuGZKyw0J4hogTjI0IwyuKNz0nOHrkId27dXSp4wD6+wQi0IzWteP8Au3XgB117
                42972MH5tPWXl+Xg9PExVKtX/gbwipimA4JE7eMk2van2sRXwBAp3eE8Oc+NI6RreFi0KJes4t3XxDWB
                LfW2HlPq14MEg15f5bwZwWSEvcTv/wAZlXcgTlf4vrh73UrrbfJqPq6uHGBN1H/t0w6AaIgM1G3r3x8u
                aEV2G7S24oHeWpEm89JhQjUUPb3HcrdHrd0YTUVXQ9uOM3/htBIUYiQk6GP5nAHE6FjyWyaymJumvXBG
                MLOMWU5ASJ2Ouec4WBgU4HVnKabxghID2cRQYGbR64Kt9YwugNV5Ew7EJ0Vewu+UeDCbtGo68Ovm48Yp
                EEKqH0SJwnTNGUw0k5Js6q85MzUjiaIS65RcC1M9kEp+9xvjJI5BwoBJWhtHEpFY4FvorNvlwvp6QgBz
                pdds3pqIwLQQIO7kqNwX2Gd2V6uGFtJLvUu1p63LPJotq4ApTpvs4+3mBV4AADgmKBybv8Ph9cbx88k2
                lihTinTNsBleCg5OssWXWsQc8+nM0ERm94j+eIjIgC0Go1O2sBA3TtIHDpzK98WaUKPc4nUnLjQVEXpR
                t2Y/TAcTBBCBdFW9PGV9sAqobL6gOJJQLpk7lvTdty0l2hpb6Kzfq5S6cYQRXuuT2emA1UxqBKwC/wDt
                g3WSgrKhYd8TFc6RZOIUNb6nFMZuuimgT4jw4fhDdwBY21NTGXoXmh1Ci8D0wKPUQdAfSmxLw4b+vyjy
                LxO3fF6WpKIvRNPfjG0S4qBHZHXk4QccDQpT0esb88YKLiWOiEdu9ZrIYIpJ4tBXNFwEy1rmukU8mZOr
                aQS57FTd4z6kcf5c4kSCocHXIDRaKQE9M55TvgyuBaoPAc1Jxylja9potaTnVwQjldUgNjYfmj/6TPDT
                efX2K+2X3oW7e6eVr844NsloOgeA1/xHARAevjDOhaBLeW1+N+Mi6/39M8L/AD4wQG8pxNQm9+M8fFLp
                wOFxtUnZNHviv/nmcr58b45/4iiIxMGEyi5k+AUffK3QQ1Qv03c8v/e2GHnVyFCOWZA7ApKtcKUF55RI
                9MI1LSdQWCjOl66yUah0Kr6PbA4RtICuxB5KYlZql0WhD1FM0olqVA74Beep3wxBLMlCEFJZ6jzzjW+h
                agDRaiBAffHFSEhGqbvaoQjzDEO9NA5v73jjBUvCWxdv3vPGH3KQESmiUncMYXRGrQ7GmXIpSNGOjpm+
                leu5g5ZAJCClw4ObMGqUIOjBWlpNOVFfROyhXhvyYJG30CQp1Er564q+PYFMvVOO3OLmz2WJ3d82ZU+l
                UoD3LHfHGXI8bSIQeJ48c40K9jnsR9Exhjs+SBF33GTEywE7GXU5zp4w1TSDZBNaWN5wY0n3AWH7X1xo
                CWQIBrTqdcOp0iGQRddKnQTxg3pKQ1BoQvXebwrLaT2wU2i6TnFQ/UQ9hA3XWUYbAERiOLt4emHuKBqG
                gdb4/f8A/AIi6zmBZS898Nk8dT4PZAPNwdpqKWQapZtxFmg9BjvcdcTGL2qvYQdatI8ZYmrpzC1g7rsw
                LwQjRbMSQeHeMwvSDWr1ne+mNjv8VWiLLLrU1gnfh1v0EJFdcTpQWGmEcE10wUhvIJYISHltzlsI76+R
                IduON4bUoCKSugroIi6w5siURe46PP0yJE4zO6MO1y3PUBJpe4TCbO3403QC11sHcy4z7ZoA6Icc8GBE
                ExT0pWji69P/AEqHoOdFv2gDDCLRPU6drovyz/O/zn+9/nP97/Of43+c/wAb/Of7X+c/2v8AOf5X+c/1
                v85/jf5z/O/zn+9/nP8AC/zn+l/nP9r/ADn+V/nP9b/Of63+f0ZA+PnYuGXox+ckW1R1GvQRH3YWwc3V
                FH/uCVIdM9vQ6dHO8ogMNiuTHimzrou6FDCvIHiXzzTJCIXFsknP0L1wa0hD7AxFy3qayWvXuLSTuZaY
                Xxv1CHNUB1ae+dQrvCkhpHPfpz1QiAzupw805msjAISHNkj1UfHSNdlGlru6ed/TEmwztY3v08b+mcBK
                HEzpN6s9s2Ta8pvHTAN8TXOWDK20EqlQ87mKkqWsYROehxz9cBs3Pj+Fa6eOrvKAemqzFipJuEZgbNOT
                u+DW510BhzkL0zZOfBvXphmT0TLIHeA3rNgNwiEJ1RXJEOcDBxTZ4Rrmqqeec0lpdhELxacfXFRksJTa
                j0retVuHJYbQE3mvOoYBzYytLz6EtPfFF05CMj317fXGIiDS/qVktJ5xqZ6GAQHI19AnVcANIUNynZQj
                3mLblinMnDtrb1+EnqSSTpjlZxK84ase9XYhqIiyvU74kOCGZwep16H/AMX8idQFxMrbV3Kf7vjy6spw
                Sadwz2w0kAA8b/5F911x55+2+2+y5x91dQb4urNE7e1PsMajIXfq+hnt/wDv0yP0vJnnzyvxnmfjPI/G
                eZ+M8r8Z534zyPxnmfjPK+M874zyPjPM+M879WIfkmfnmflmfmmfkmfnmflmfnmfkmfmuflefnefkefm
                eflefnefkefkefl+fl+fk+fk2fn2flmfnmfkmfmmflGfnGfkGfmGflGfnGfkOfmOflufn+fk+fm+fn+b
                FIBkqv0J74jYbRyFy+xHCcR3pFIXaaPly20RDXo8emCKCd3p6XvR+nf9WNHFMq4L8vtkP5WhVYAd7hOp
                xaq7CzX6lNlYkIPaO82RQaKcbXXDk0gRegDmHLX3/RsIIWRa2GV2Ac/hSLrZzMh2O1IsAO9wfZ4NVdhZ
                rCiFwp5BR1viuOVBRNxhVIZzNwq3HnWfXxQD+wfOOkBCR2hJ7vxn5fn5vn5Pn5vn5fn57n5Dn5jn5Rn5
                xn5Bn5Bn5xn5Rn5pn5Jn55n5Zn5tn5Nn5/n5fn5vn5Hn53n5Xn5nn5Hn5nn5Xn5zn5Ln5pn5Zn55n5Jn
                5Jn55n5Zn5p+oMeVjzPjPI+M874zyvjPM+M8j8Z5n4zyvxnnfjPI/GeZ+M8r8Z588n6UZT9HJiPbEe2I
                9nFdnHsPxj2H4x7j4x7z4x7z4x7z4x+2Y/Zsfs2P2bH7Fj9qx+0Y/aMfvLH7qx+6s/Ksfu7H7+x+9sfv
                bPzTH7gx+4M/KMfvjPzjH79x+/c/N8fufPyfH7nx+48fvvH77z87x++8funH7lx+5cfuXH70x+9MfvjH
                74x++MfurH7qx+6sfuLPzbH72x+9su/CLFk/vNDzZe4P+U/Q3+H7HV+098JTb78/2aMOP0Fo6Q2DT03H
                s4L+nGDaSN32PP7ZWAGjFyl0PIfzhn4ktIkqfL0xfjqLUjqnYyTkohHTe/k40COhUO66+j+inkxEC70+
                X9WqPP8AEweYp6w/jFW9Q/JP4ZZFSBVTkfe39Z+bYfe2H3tn5Fh91Z+VYfdWH3xn5xh96Z+aYfcmH3Ln
                5Lh9y5+U4ffeH33n53h995+R4fc+H3Ph974feuH37h98YffGH3Rh90YfcGH3ph97Yfe2H39n59h93Yfd
                WH3Vh9xYfacPtGH2rD7Vh9mw+zYfZsPt2HefGHefGHefGHcfGHcfGHYfjBdnAezgPZwHtkw//eS9qnzH
                8ZGHCfh/v+hM20HRpv1yDh8GHgfNxCjuJ6vZ660vccBwvNca4Pn+cR6reggT1a4K3Zvo/QIQR8gV/ee2
                XXBF2BT3Vc/0e/6P4oiMThMZGvPdm/rh2R4DoIA9gHtn+v3x/id39f8AK7P0RKs6p+cohy/MP+f/AN5x
                Xviu+Pece8x7rHvce5+cfv2P3zH7hj96x+/Y/d8fvOP3HH7/AI/f8fuWP3zH7pj96xyjjHNOCcE55wzk
                nMOIco4xzDgHBOecc5JwTmn9LEc44hyDjHOOUcE5pwTlnHOaf0FJxzhHKGoCIsLcfowvl/p+inaEvsH8
                59Qr4H7PznM5aOqdPss92cTS6Khz7U+HHAWJlz+y/pMsPBdxH6mHQgnmEX5U9s/ye/6j4ZSe7MqY5dab
                olA8Y/x++P8Ac7v6r/F0foikjufGT8+c8hRwxB+lHGeMEZIxxljLGKM0YAzhjDAH6AQZQ/QmjFGSMMY4
                yxgD9McMIZQxBkDDGeM8YIyRjjOGUPumH3zD7hh97w+/4fdcPvOH3XD7/h96z8hh98w+/YfcsO9w7rDu
                sO84dzBe+GTIyPOLdXPM55HPPjz4/IZ+RM/OmL/2mfkT+s/NH9Z+aP6z8sf1n5Y/rPzJ/WfmT+s/Kn9Z
                +VP6z8wf1in9h/Wfkj+s/PH9Z+fP6z8mf1n5E/rPzp/WflP6Z/kP4z/Qfxn+k/jP95/Gf5z+M/1n8Z/q
                P4z/ACH8fogX/UAgQv8A8keCBDhgV/4IlSlyv/C1as+V/wCPtw4Nmu+FSiRJA7uSgsinbEQxVQyM8FMK
                scoOvBPi4EJFTohgKtyHHfPp7P0K5J0b9NMxVDl9z+sNYmV27a5JzHy85oBAGi09+nbEZx4QAXadzF0X
                BCjuanjEFhZULr5eXvvOBkhc/wB/vhf7ur+r/wAXR+kLX/8AT4PnlYUmMt6/8KbNGA/Vy78F/wAfFu3Y
                UB+qpWgHIAf8YUODhQF+qBCAP/B9M/1H8Z/jP4z/ADn8Z/vP4wP/AGfTP8B/Gf4D+M/Of0wH+w/rPyJ/
                Wfmz+s/Pn9Z+XP6wH+4/rPzR/WfmD+sB/sP6z86f1n5k/rPyJ/Wflj+sD/uP6z80f1n5I/rPyJ/WB/2m
                fnTPyJn5jAsAeuPLjzOBdXI85GT/APecg2m+V/cMpCJ6vRJ/dggDQDZHh7YGbwlCLfhhtRFZtlMvNhjt
                vSdQvwY49Qs1Ta3rvOVI75qTdnRc1ELSa5GXohk3FpvOu57/AKMQEEGxKXE75EAVNxYcdO+PPNQyDlKs
                Rwh4yCOym6zt40Yr4GVQFZt7Zv4OIAoqrN6MGh5im3DvPzTBXcfXgP3ojcJ3yMwTyhNp2vORhIbgVV+j
                NLRL1UZ8P/wRVIuBHP0hz11hWsGRoPvROLvJF5oaP+xm8UotcEQ3ddzjrgESKJNhR6ApfPGDJAA8Krab
                2gVFw5pECxFewi74ciQElavcQdsWsPRVuSdZhBGHIpRuwRg1hTcyMj0dYAL5FqnE5mPM5SxOuIE9W6lx
                QpgaEJFQaOeZ06YHiIibgxeXTXHdMHorcDNpsCLDXl1gwDwkkmusEewnO4vrnCOlK6xuHSVKU/uSfVXm
                FnadzHDiiIAqegB6/FTaUuE33SIRo7elExcg7LAJMnByznIqamxzi6DYd49nBm5BREWk7Ua9Em8e7qwg
                VSPBXMzxPYrVToxJ2HWgY1JQqEN8USJ0pttxerxKItpTplShUAgE30rvBYy8GgD2gNjrBHJM2AEdXkTW
                G8iRYiFQFO/U74TIUzLi89ABV7DzxjuLmkJI7qyd6Zt+kQQGl6uv1qZoe4SAU11Qe43xTWQS2ZgAXA0c
                uG2kJEZWoJsnJ6OBAC0Sb4nQpj1fIr4EqkPPXSjHc7OsTKgqKoKkXX/iHLvsg2+ZgOUan2SH7fOChjQy
                KMZfJnmYUdzzAvxgXHw/o5WrdxXPNwEVbuI/qBi9S7iv6ZdX/mBfj9SSUKqu1Qr+qy3+m/jP9d/GG/mi
                g66eF+xhNNCjXRPqfSxJlqPfWfV/8ZAScjR9KEvXWAKZyjQj1QcXeUTSgpT9I5m8VUqAYld12HjrgDkK
                CSJR6BN+eMPpMgi4S2keQKt4fECwWLb4RYuO1cySe4g7YsNWRV65Os7ZFymyXRuwRJTDmzeC7xpeoAXy
                Laducet1rOQokgnVpJjrT3qC7VLDk6dM0EBiTUGLy7447prPGHdEjToosNeUQWQHaSKJ1lF6A53FiMCk
                ZKV1hGHAlSlGJmnUH3bJ2nfBBjsSERl4kPd8VJUwY5C6QoBUOJjYZhFXgAE7ODlnOKPnbgGw81PRw/Ba
                xKKTtaO5Jwt0UQIBaRdQ6zDO/dLJWdBT0OtAQssgtQR4tQnR6xHBx8pLQpua6ZU4fARYm9Lio3RCbAHt
                oeunBApQFAh1bR043ih6kO6CoAZ16ntY0IZlBdvQBF7HV1jiEdlKUe6vHejlfbgKASXq6+O6YqrEkbE1
                1hPBeBbyELhgQC2DRzl30DExDVCKPc8mbnjZOEJ0HW9a7lQBGHTVnRRAdTsiYkqThViulJv/AKHnW8HA
                /YqD69BFipm1nRUPB499Yig5tXD2X3ftia24lD0TuBr9sgC7pKmgjogRuiY7dKZrkHBWKweergkUsbkt
                fY4uG7RJ3Yc9zmYCoAJIbeL2wToHACoG5PANZZiILX0MgTQAXxy1yA9tvuKd6WxsDMds9ZAh1asePO9Z
                B1Sq7oczoO3sxDOOOUFMOCvc13yLcetBCXSGneku4AjZxSwXs9aYybwrjgmirfZo8Gk4iGim9U1PIn0d
                KhFpILcio7he3HNKqVyamhNWfaOPpSbie4KAmgbR70GzRdao33onnl43gjDw0UCPSMZTxDTZ3bW9k60N
                fhV2c4HIQXrWZLdI4lQ+iY+cOUISUkgdN9srxjCECqUkFvpQxqr4W1CnPD0cQModbFpbMJSiI2UzQ/JG
                1mh3JZzp64B1sQEejPUS8TEi0iCdLZF6hskzpmoUNR6C2vG3ijwelBEH1X7nJw0tLDEsNJqiHExneU4M
                L1SCdJ4U4wifuMEXw0O9YrAJpXMT3X/jcc0l6f0q+DORDRpgOg8k+X/k2rRpUr1Y8/Zu279k6ZPm/nWv
                LfKFVCQGeXBZJ/CB4RfGdptp3Q2+7X/x7JO23R/JQZOXojI4xVxCoeVxTFq5tpudl4PLx4yPE3QAondB
                r9sWaVCgqnCJwEbrWFGHlFwxwVjYMvVxEOiPOfscYmS0bs49VcydcAOEBIEj4pkAi2hKnMkC9dy9QzkF
                o5omgBXgOec0fDtihY7I9jYWYTPzCEFg0Ml4+dY5RXe1Et6J0dt9mXX7HPFMNBXvxxcRUBrlFD0aJ3pO
                sBrGU1RHZt5gZN42uWFWRvYm8Fa2RiR3qgc+odlOlTcWsEIjDW0XtrrpXtEM4aE67/dhhHGgAbctQ61r
                WpjZJs+XNuqRHheJadJLR3B6IxMDV0iAHqOrw8wU+M7X1nQ0vVs1tDFAPE2f2c5dVwNBUie2+2VB0Yrh
                V2QFsykUOmOXrUfBDRrjCgVNI2iPBdiNso0CIQG18h1SGcweuP1N+3mUMj5lZ0owiIAldEHsOmsDuson
                Y9tLfD1lZQHK4QK8oYrrcUoMbbGmqQsmdoRphvdV2HSV0oHF5+rgIU6aOdHRQbVQifD/AMwlfHAd1eMN
                E0Uk7CKnk1m7+8I9QkvCd8EMhNC4geU6nJgm5wUfAuk69uuQNHyDvh4TGqcC8a64QPEBGuEfOBCElcsK
                68Ar2N4znliAOhvbzxmtFpHoUpxTovLhclob9UUPVBQ5Y4kZKm/UKnrEZzG5HVWm0oPorjSPEbHleCm8
                Rh6aQgrtxre8gVav4Cu3Gt76YGW1FApzvDCQKNpwB1fBm3Ha2jJWOdN76byuMQsPbHXk+TvktjRsrpTI
                Sb7YLLSJI9UBU2dMvS4FpRieo6zQ3ca5jk403OZvDG+pKIx9Y6ezjIVHSwTpC6Q6poxO0T38vbXXGqST
                CRIvRKOdDjBQyN80+c2ClXU4W9vPGCII0ev/ALGem4hvofoPtgQIgXc/A+/fF2LUcicn/jk4vbT2h5U+
                mG1Sua7LwH2vZ/7QkYPWF4WaHlmPX4qqTlO8p844GgbRAqHkNztlBipFIzkRzw/GHmMSGl4XtYzvjqkR
                RpFYdYC4MigoBFSp0LhqkAlQsezMREtcBvKfB3xp7Z8LvVJ7OzXkzYSXaFJEOxUhK074hW3Zt2CA26Ou
                dPbDi7MuO7dpkio0B7nphP4FOqUnr074GJaG/VFD1QUOUHBeT0NkvHoL+gAWe7HGODXS3BI+96eguxp3
                4xxShpb0BOUm+2Hu1tEOzbi+cS7QNkOVvDyXARhAlV2A2vOjOT2QZ3T069sp31FCZdeinZsyPp441o+X
                jv0wWhEyhKztswSyhCNSnSx+McmoSiSr25MI4sFlclPJx3/56mXsmBV8FHwXAEkS2gV4QndPGavlPc5j
                +HFTb3zcOIK71U65AsijwVwh8YgJvYMHsJ6LZvHyiFvnlLKT+Bjk1btPnEX0XbNjJxIoL3Cg7+jAmFDz
                CqlyIE/aSvME36hJeBt9uw4dhlsUW8CG+IO+BupII9IWkAc7vdxFryBwNXUVPrkFFw2GWrx13srrh2YA
                JchOrOHjD/BQCTsDV6M0y9cLtKN5Q8oB7nXDoZweoF8PYB3xzYj47SKxku2geCCXEJW95/uY1rl507o7
                1SdkcFUwgBCQRAqbUZvDCrLNiBkC0t3pNOI7IeTyADaHq/IUNBhtH06Sa495Gh9YOgDhV89A4aYkwnVY
                mATSQ5QIAdmFVX0KowCAjemPIeuSL7OPb/2IBEEdI4JSugcW/L0e2SWIZcnT+D7ef/EDWHPog9f2wzjX
                XrgeOhfr2M27cJ23K9X/ANqoKhyoUvVq8E6YGI+EJiw7pKeMAL2EZY7BLqHPbN7XJqaHQ3AvziFIQpDu
                gJzXWLu2LTy9YiVLxZUdTHlZPdZm2BVk1q87z0cF6hsKMJQTbehNzDPEupdi7F7Rju3KXgydQT7+7Xvl
                nktwEUgKIMG2OMQjUEiEdYuwFvGSvhxtAR2NDTw6XJBZt1EB4E32XZwQhDgj3G6COtDTiOFyMjX7pmmx
                90CATzJ31EXBUIBoGbsvVJpoRcYi72gvZhZAdgCCIdzp1xWl82JdfdC8bnXDDIFiCQ2rVF6POKUFtKsa
                JCB5ksMDVJWuJzSiz1HJoFS4qRA16AO0vTaHvMMAqhGd5Gtv5cDQ9BY9yPOTVSsQ1NiMKH+n/PnNtSQw
                9UxwucgA4ShHKRcAUuIMfXHhegQIdvTOOuYQfXPIe6/oyKMKBCcazy3YVzlW3BfR2xYtQRKh2uBMiipV
                O1zobSWbmKoW9BG80wKTECAe2JiUcIx7cYAECGBBaIUfbAAscA/RxiiL9hi8GAIE2sIvpg8m4Cj2xZqs
                MEJxPTHE46CV7uBSLgI4Bofg/PvnAPSEvrgSvYkx9sW5SsYu52zZoYhfQ9P/AHS2Th1Hh/h8OSXz6g3r
                6v5xU5PTq7Pjs/5/74EjlDXef6zVtobu+U930N9qulae32PC9e3Hf/3cB/NX0PTODsDCnvnE0YFPTORo
                gFMXUqEc6PI985hQkL6O2e0fV9WcYOgF9XPF/LF3e7mproEH1wRIRIGnpmlGhYYONYosKIiamLqadjjp
                rAUKCMNO15xYOMiVDtcUTlQFd3v+gCBsjGj15xKQuSK++BgAqiDWc0IAC++M9qlj6pzm0eCOmu7184+K
                hwmz5zb/ABYp6O2NkPkK/OK18DFPfBkmuSK++V6pFBvNMCBvAgPY/wCdkNxiyw9FkPTyyUrQCKYN3TUL
                84gx7xoOBoBt2x4zaQOYRIJTgR47rmncxSCs5DkmED1a/JVaAc8OY8RChEJ8EPkxYk24IIneCexrpVXG
                IkGz2qD4TsQpGod3EYWVAaKRymNA1DkNOLrqu+EPWbRrZ3O/TzxGTdStIvhhWXkwDbdSB+PUGPSvfJuY
                cGUnay96dkyTVwkBWnU3O8diXKpVMOA9ge4uP9bZWYo8gOxTq5bDpOmDwaWuiHQhbwcG+6hXv0g4e/Fp
                sRPQHF3dXB+Mrk+u+WztrjWF70KaDZ6gXweTFV7BiIU9QCPdOSFHVoVRp2CdsVRYFtIJ1i5wVK1DYnG4
                d04IMRMptE1BrvnAIAw2d/Ylb8mNRwwO/s0pvydcDoiu9uDUI1y78VkuiUVAZe4fV4w88uSStxSUR11E
                vGULG7GfYLTTDl7btHmWhKmxUfXxjWi6xHcoexb1Lxj1oKw0lqkQ2Jz2xaU5Tss6B6ivE20+WmoyCdg4
                wgwDyKJrtY34cgY8HBlAFIRoBYekYaNKOd6J0dZjgllE7pmyNOd3xggLIJVFp67U4RN84zJS5ohaEGk5
                KN9sOvEnk3UaoKA2cY/NhzNJ4JduTjyNIQKPuf8Aca5AHA/a/b5xw5ew/A7P8ZMzzhtH8nn8v/bvOmh+
                R8ZaBmzaM+Tsfa9QAAF53fQ9/wDv2Tso8BPcT1QJlSFj8Sd21jzV8YhTdEOgqk0HcuzWWtMAs6PVPnct
                EoogQp3ox2ZnD6pYwTFQAoBdHW5LdQLHKL5AeW7ByOzhKs2rbR6o8hnknhEOm9QaFSs09t7XqAzyC7hO
                MY94t7E3opW51xvpUSx8AKfR4cpd0WsAWAuhTgwb1BvequhULo2dAnNDeI5faFA83fOPbyCEk3oLq8++
                LUS9YJb7HZ2A41m7G8KSy9afcHkuHiHEyQYhsJu8dXDYPgocB+WD4J1cQIniwxM+4707EUipoa4D2B7i
                4/TeyszR5AdinVw6Eq0YA8Gl6A6EbVnlYEBXcDEAbcNYBwWl6MUEss1WHRSdUWdMHWZUALQzpR5amnCl
                KHIO++nPfk1iEtQMGicaCXb01jJcMMESginAj8rjpHgwhEIKN3q67pLSHpgwdDEUvpllgNjYInDHRs13
                1TRYHIC/D+Eysk2qCFIF+zQVpKSlS3KBGdwWYdQalYbHqr0XE4wQkXGptRHpCdzD9S3ZWoKA2N6kxsch
                Y1IRuK0ppMufcEk93TQb72ZuHPtphxLX0m9s2FACqQHRUV1HTjGA7oCgg6ncwcEDugNKmRyV3OuTKqN0
                gRAozs7/AOYuZVKiI0RNiIImzARhHePYN+WvnOMgUSrGbEUibr4MS1IpyolW5o0fy4WilXBEdDjjA4Sw
                Bl488T3BwiTLbQemMNTqurJJ6jEKnTcPyPh50b0SPwy6EoHki283a6MAacsnG5SEANGPeEy4SO+uybG+
                ubYjsOXr8vtrCcCp5JSdGdInRK5MU3cDFToI1mn2EeLk6pD4WwgfRma1dJ7z2u5d4jjYTXVY8t9KhBc5
                SKwFm06KHnQcBiA51EKwpJKpJtXluO+7WGck40Sfy3SInk9Cb8Wakk1JrDX5+bW1edlb13yEfdtWmVXl
                GDebscZpR0CVxnFCecKhVTjQH1B9sWoCEQkBemjpgoHQBdmIavId/BAa3DexDjXcP4ZGUGg0wIa5eO+C
                ECKBgF0gD4O2InSfSgZ20DXa841BAbNYK6XR63nGdKwu4pjvEcQCaMuySV7JKapNj3vO8GKIgsAQdiBx
                q84zqKSAaQvB0yPCiwgQjkCHZheDAtR7aLrU2nd/twnv62gU429Tw85ry3cjUs5aY+d3FRjr09R8e9N9
                bDj0cBL48D3LzvNsvbZx37S2GiGCWkFXGHSeeXriKN1pF6HSV+d4tet4KppEOw7rcNWgaANAf9/B8gjn
                9w/b6NxPrJ3Pr4ftnW4Yc3snVibphTT6PX/qTC0Aqvph6VVqR5dH19MP+1su+x6t6/3cUaO2ofPl8P3e
                P++dKg4TiERQ1ZZ1wgzA9ncO613zvEAGO4RAaj9tNNZBc+XYvQ6T6mKKSGo6rwCwrgEezaPq9V7a/QWy
                07YA12QPcHkHNAApsd3x2eTcSuJrULjdJ2K+ppprNSh+8lCeX4MIFNI81Sc1VZZWy42RYUKAhCa0uMuP
                JW++I0edG9GP3nVVtAI7JDZ1Ljvgj5juOJEAnjbYqLkvKI33RSSRkmsEkh6S9deaa3rvkHEAE6QXon0X
                l63GVRlRJQdQV+UdMzT7CPEydUh8LYQPozNauk957Xcu8RxsJrqseW+lQguVpp1Cg+IofAcBhPin3dV7
                vTN60C20k7cGdEKOjvATXc53jlQACHLs07d87wgNwPGw409TnfpgOhIBRZkoVROr4Mfy4oQolXocf3nJ
                700LGKVX3cWTTBZJIbpWcfsc8iWnWhgtflkrirX/AFNUbPXP41lKAVVACHhNZJEwJXAHYcd1IR6TLoFJ
                xWyHYDsDxhQkhqZ1HW31xqmiiSAPVoG+dZWoLgQ5eov+rjjhDU5UIonJmoa5HUSmqIBEmiSEX04pCsUe
                VQK24sTI0GhNueNY0mMISRL5MQaOL0DYOAu2G+v/ADZGym0qoGjymK+VGypNHmK+zi0fOV3CcNPz0swi
                PvSxBQ0GkHjrxiB3QXsRI2TfbENVoQJBbvj0OcqwkTNBi727svjDdfQ+kj5UzZZ75x/QdbVcUpbmvCZp
                p4NdslYGhsVeJivHasA1D3N1hTs41wLrq3XW1LdYXu4kUTXQlHv2ETOgaaQGz0wvR6WeJY7Jfpghh6c5
                jqLA6TTh/DOC9hEBco7p0xDSCO2kS3gvPOMwNagg6n9Ymz/mBCkdVJ1wX1mALpbVbNXpggJdIMLyR0xK
                AiO87jpHVqUfahKUZCDTFFt+mCOxsUTq2hdmr0xG8xPRpC6o689LjOQroC8NdjnZibe+qGLSUlyjZMgY
                EaGiI9n2xHT1Uj70AWk30xjoRSMqNIUfRHjebrCM24dN3QObNbMtWnUBTWtaLeJ1x8UkatJs1OTjWXAo
                mxSVB8ie2UvRWaBpTyaxKCS+7p22ge1MRF84lAzW1aHpcajSMVBPOwc/XEkLhGA5O4/+hG8bTpe65HA1
                PaOh24B6fBj1rw8h5ORxsIeP3Pk+uKqof8Dn6YmCugj/AMVyI/cDDJpsV3s8rR9cgAEVq+r/AIwSpfrH
                6dX8+2DrcgvgOj/V/wDRe2uRWBXRziLAhQSu42tOO+KCga3yCaFN9unOsrLsM3dYgur56TDUkZjojk7n
                MdYRliVyAbvG2p0xFXegdwirePbGoTS1AkJdBvO8DZlqWhsVI5Ghe+aIp4UIIljWtLDw3FlLzq8XjQey
                7k1kxzeWICFIoPhzko5SRF2WnrDUtBExcSA3O5SYI3VedOib8Pa46bX2KCNqI1A07e2m88iJABUW2pdN
                45UkTIIjqt3x7YxlnbfC7X6ZszpQAWKojot83Ll8yNNdi7RrLAjOwbeOBPtmlsn5AxU27R6mjZjHMoBd
                0IU7fXBrKkBlDsXbNYmHWBujze/Lt051m/ThZsTxqdTthc9EQvqp2BeYy5Jm6FID5A6w8Yewemh4W2Sc
                MNO7plmHCnuRljhdWzUfCBGU9bSmQbPahA1nCoXp1mJCVKDApOHk3xvGBtZonMF55OMiRnMA0okor4xP
                RbSGzyuTzq4N9GS1mkTkqQNq4a/jbGFV8F+QxwvIPs53o151uf8APfMwSqEQ6aBvLoeR0hPgT5wJD2jG
                ii2SuQrDjdfDfqPknS9nUd7wt4jRYhr0nviYk0rDa99Z484hBzYWM4Xg67+MXknoHU9HqWuia3qqGuNl
                KSpbfW24B+48qTq4R57l8YlJsKTi1UkHgnWioUqQpNRxS+nnN2pIaATyKbcQfDpP2KhB4OejEumdmpt8
                /THN4HWCL5xEIY9jAJ0Zp1uHUydEFCVYke8zT8TShs0Gnth2Miq20jNS3GxDwI1LMjQPC6xzP2zqBE4v
                V44w5vxt1dJ3vOEhtrpAArWG3q9MEgpwwAzI0HguseJG6LELdaBAkPOEy0e9EeJpry7bdsEhGoBGhFDY
                rLcNppweSSvXDtjzZBzbtpcFzHKSboCWQtW64ywqIwTAO1gQht8TeIoil1E8NV9NdNgjfHSOtBQ9w6XV
                yuizSTjU09vbFElbRrttrfNuawwltAjAm7MHBtCoqGLnZS927wZm4MAuzQbO8Opt5NVA0C1Vb3dv/qLC
                X8t197g8Cce0rw+8xvqieHtq/fDnkQh9ZnMUfIwb0Ht5/PU/fINt8ZlVRcTXxr6YEOzZV9v5piog3DV8
                cfm4AAAIB0/9JeJtQFpgJucYu3FLZAfZ7ExzWpNZkKlJbKVOyUrTNCLqgaSXTPXCCBtbUQaOUefGFhNG
                7Cp6fK+M6lOtUnXvf2edXYl6FQa2lEOm970eAUB0Sr4EJxroBgAsGlZcPVoIutPjFlx4O5Dmczfc5bOm
                QxsJgOh2AB6XGFIm2FAO6rrVrxglAfSh3Jy9cYqnrdvceZ+c6o9WIes6WYZAGjqXiZp3pTtiDQMnsDjc
                nOsFEFF8glgxAGusyhjTsBkNav084c/hbqt4FbD0XhmVRm7uug83T3xSPSqdi83T3xHyjhVir3G4ahix
                cIWU6GhUo9HvMDDxCHKLA2dG3b5qJFDo1h2nznnCbagjwCMSOsERMY1pFErat6r1uTcwLvHt54t84H/5
                DVX0Wl76gaMJeYCE67Y8OJZ0w+qOKBctdHoa09UWT1RjVnL1+fGFu7hAMB7P3Y7TVamz8GiCutcYRrgi
                VcEPGA6mIXcBS8RxeNYqhuGk6xQoVb1YnOVC+6DLS1eV/wChE6xRG6E3TAnNy0CkawV4IQWsPkxd4rH1
                9HikE5rJdZHtQbiOgdbN+TBvZVBliCDE15/TRJQc5U5qB2BTAlJRmjae3/JNyhgbK9NL9bQCGsPQ2t1M
                0Zyh0Qd90Sc6/wC/eT3nPwdddQLUv/4a6qufqCXEl29yfTTFniyav+K8Jiw1HCTPesEnfAQP/wAap8eB
                VcAHVWAd3Nxtla2Us7Hbah1wRQT6BgOQtDQafe9SkkKARtCU6HXS66Q2GhR0r06d8t/iNJY7OgGLwYCI
                AKrwYiGioaD2yr6VLSUNLpDfOXwSPZVB0EEbephBHHi0OnT6Y4HKRA9tY6HHIivjFAcxAEcMKPC0ffBt
                GjasV7gd8cDs0tNSiG8BBVYAPHfCWMgZldi85xSrgvqOmA00ERew987NCYrsXlz4jlt2nfBEjPCH59vf
                OBCaUermt2NGvfjBC3wlH3zSerEp74yQWO1ILtDfOEloPQFChrg9kTp/zNMySXDQpzo44XhwGBFvOQNJ
                Nd+xmzbpZC60ou7XfLIK1AUDwqA6g9sqgGAaTuFdhHtkTkj4E37T6WLalBWFj84db2tt0FATe9idJl0A
                FbYoJQxOlExFiqMVDYqJHiu6YVI8DwUixQctGKcCPDetpGtIqJoqLa2roK6HBSJo6GC3ipqekmWCFB1v
                J9K4SiCnYDeEnTCEkgLSu6IijjPmmbDkYlnGHJCbK563qdOXWA4wtRpFDRTfW+ZjF6FYDp6Df13hH7HO
                jGlDQbL3Y3LDjRiIJyLXsYGcAUGmLtoIeJ0uSACNApbY7vTjL5Bo4UNlTPDjH2k7iwS7bAp37YRRoqqU
                KKKrQ63ES4Jk6G6QH9HIkPNsmtqCRZVA24fsHOnfnDghYetKsWXBQSnsIph4QrhaiFRTTq9sg+cXT5Xk
                uXdWo7FC6NATT0Ff/jdMrh0AuFPVz3DHewQkHqNijr6ZuiIoSRl2k3hVveVhbijBTQCquor0cNqD0o0E
                xQCXfExIW+jXQnxt9TAx4Pt8hdkTuJhG/tUFUWEMS8swEYzhPEBkDbCyuVsA60AYHIAw6kYyukARNBtS
                ddXphlUUQoAihXKsLsxZ6YCVs8Mj4XEBTC1E6Ilqb1ZhDAUVgSU1XTmbygQkVt3hCzcuD6FammkpIbvi
                9MbOmTKik0IgZ1Y8NuEDQA2aDOJjvuGBCYioi7zC2Yy0M2lI1HTtmweuaL3Im0h36yhgm5aLrIZ3Y7ME
                kqno7oiWy9dtiHPFuxtqk7A6w1Ylq7QAFAiGuwMLYcEoqJwenMRwB9g3maBGgXvlAW+8HB1OTZvqY3G4
                CmxdsRryF8/9CBEE84gIgnZxVgHiAN3FgGOaArkLYXvhqVS3KHB6H8vfEhQvBTjGRQqzibhuy9NYcGgL
                S9TxgW+Baa59jq8GcPodHdc7Fm8iXf0cDI2g6mrs9EffEHwEhV4PC9LzldVM3JYewvtguN1sWug46Kw6
                YzE2V1ewG1zqDsPEuhV0PHEe2aKwah0k09kcpQ0G0SgXCjpDjrgZE2Wqx8xxQ8F4A3V7Y6ywuUcUQd47
                zMV9x7WM7x7Y9X1ug5E5Hw4gOaPAUfVp+Mp2OwAJSAOx7vfWgFREiJMOeXjoYfWYE1lt7YNiKV9p3WkO
                cEbiLok9R4x9o4A4aW8Ro8a9cl9DRAJSjuJw9cDINlspPUOrDHd6EhV4PC9B5/8AiZz5y7Kx+j8YDFrx
                k4/4W9mTNb2NNy3ID0A8roDuvbATUu22czvOs4wFs5e7A+ijJteoKcp87cGJCy7anfIYSd0Dw+R78ZPN
                hW2KX1N5rtNZq4ADvoWY4RB5a6HpuaHnzlMMBUpRTTDzd61h2jqIGWTFEbzaBiojvuYMss/CFH4xsqIj
                kG2AKzA/EXoHhHCy8haM5fQ6vBnDyLR3XNJ66xqx+jhMFAHUpTXo3FJ0EpV0el6XnD0SNbcUDzp+MBpK
                gWOLDg8us5eLL9ju+MEgOwfNQN3TQL1cav8A04Brv63CgQU5BRsPChyGzBH2u4gxTuXVP+bfSgqpah1T
                D6oe8RB0dvJexm3bQIcSRSnR4wwgJhESBxYPb3w9qfAUFs7BXnwmJGbx9AEa0LtoRtzbdbKCJdFFd2aS
                b08AjHkUk1IfQ4efYCJCzdMziXpFgk0IAV6wLevOIHSh8FGIydenZyjICV7lCDo083kMAAYoGmEKXqjy
                ZygeD1N+H3wX2qgmNPdkfPTEhAjEwG295KGgOmzo6EGEeWw7S63cc9NKBUdgnHqZfxbhZ6BnJHuNZRYB
                AMBqAYfVrDXSSHSDzCHJqPmI4A6rAML2MrBXhXTc3xhq47o1sxsCjuqagSPX4yJ+AfVvXG4+DgdvDGge
                pt1AsXk3CEWQR+lxVJjOo1/izWCCC61HRe8+CujK5f0zQ6ERMnB5GKKhBFurUkeXYubpUuSojr6er3wt
                kYMl4FaKmkpday9b20BYRs7b+WsRKPiA0m8QDz7w8YABGxPd0PnpnP8A8KKhXNsbpUQudYI9aRLbwU8W
                O9OHOAsLrnAFVZ7GBEImWXC9NF/c5aYiQBcNHA2zl0cg81TXaupCy651l4HWIjZA2u1XdWYLVI8PYLqO
                Xw64AG4Xyz0Nq+WmcNFdAgOjD+Pk4bC6YYBbEjRD1dK+1UAdRHqPJWzbgBD2Bn9N9eMQOmwnnoHwMHW4
                aBMKlDJs0I5MOlheVAJtUOzxgxgqQ+9BwTcHrmyUN0WDAFOwwOMFOLKGqroFbOJ1lvu7KzNIHqTX0x6U
                xXQJhdpU5fbExhwsqGHfBX8RaBNG1Y7S9IsPplORXqgW9ecRNKHwUYjJ16dnGepTXvUIPGnm8hgBDcA1
                0QpYuXpnHzYPKb6R92Mc22hYbeUk9LwsjgJSIcm9cdhoDpt5IK54s5Gg9IrN3A7mWmkdgvHWpz64BhqV
                g1bGqmcEGs10SRDTVmx4HXvrFWI3U9LI3fd+6FbYEGkDwGet/wCZAt8hR9se1IkojhDphwKgC14r5xfz
                6AF4P4PgxFZXWO5N950xy8gIVg0PneAWFaw+7184C4IpDG83v74OivTNSU7aUxdKqxBoknaYNj7A2gK+
                AvfCGLEA7I6TEWARjdcz4wIaZOghp5Xb0O2N24UqnGxcZGXidSU7MUvlwdAJqTTJb3mr2yDIOfQUvDtx
                VmKp0cQ41+izORNruvXNhZXxE9LW8XkKCEQSJxJ04xMFiyLOMIzAUgCHwe4PNpUm4EH0zUiQAiqpOqq3
                vh3QT7kr8CnqHuoiFJCeZDM1WJNcvOhN1yx5BEMkDoTUxUHiqjSJ2x2lEThPbOCvjAexg65hq+jtjVOF
                VU4aL0/+GAZBkYV75oC4Qb7nnzgYKgk7DRfNzgkSB0NE9srTirOlfdzi0rREo5CH0JnuOQfvecBARABt
                Divu/OBIA2o7SW95q9sCJpviUnwnyB6YoVEYktdnd24oDPYISKDzFDXgwiCp1qHL3wyNIhyFdDVV71y9
                aFM5Sg1o+MXUqBJ0CB3a1vHDw1CKyfsB7Z2pWlc0b50YOCGhsdr28YzHzlw+uVRrbPpTieMLW3FEa4ae
                k7cYOavRNSU7apiVVWMaJJ2mBp+0NuS9wL3yQgCAdkdJiPFLG65mFnUF6CCnldvQ7ZLBFTzRVLjKgM5h
                wl4du839w1ntJb3mvTWA6ODAcJeHbvziffKGPbj9OFUJt63rgssEDa87C/8AD//Z
            </property>
        </structure>
    </list-property>
</report>
